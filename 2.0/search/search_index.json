{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Automated Penetration Testing Reporting System","text":"<p>APTRS (Automated Penetration Testing Reporting System) is a Python, Django and ViteJS-based automated reporting tool designed for penetration testers and security organizations. This tool streamlines the report generation process by enabling users to create PDF, Docx and Excel reports directly, eliminating the need for manual approaches. Additionally, APTRS offers a systematic way to monitor and manage vulnerabilities within various projects. Keep your penetration testing projects organized and efficient with APTRS.</p>"},{"location":"API/","title":"APTRS API Documentation","text":""},{"location":"API/#api-collections","title":"API Collections","text":"<p>From version 2.0, APTRS has migrated from Postman to Bruno for API collections:</p> <ul> <li>Bruno API Collection (Current - all versions from 2.0+)</li> </ul>"},{"location":"API/#legacy-api-documentation","title":"Legacy API Documentation","text":"<p>The following Postman collections will no longer be maintained after version 2.0:</p> <ul> <li>Postman APIs (Maintained until version 2.0)</li> <li>Postman API Collection (Maintained until version 2.0)</li> </ul>"},{"location":"Features/","title":"APTRS Features Overview","text":"<p>APTRS (Automated Penetration Testing Report System) is a comprehensive platform designed to streamline the creation, management, and delivery of penetration testing reports. This documentation provides a detailed exploration of APTRS's features and capabilities.</p>"},{"location":"Features/#core-capabilities","title":"Core Capabilities","text":""},{"location":"Features/#report-generation","title":"Report Generation","text":"<ul> <li>Multiple Format Support: Generate professional reports in PDF, DOCX, and Excel formats</li> <li>Automated Compilation: Automatically compile findings, evidence, and recommendations</li> <li>Customizable Templates: Tailor reports to match your organization's branding and requirements</li> </ul>"},{"location":"Features/#project-management","title":"Project Management","text":"<ul> <li>Complete Project Lifecycle: Track projects from planning through execution and reporting</li> <li>Retest Management: Efficiently manage and document vulnerability retests</li> <li>Scope Definition: Clearly define and document testing boundaries</li> </ul>"},{"location":"Features/#vulnerability-management","title":"Vulnerability Management","text":"<ul> <li>Centralized Database: Maintain a comprehensive database of vulnerabilities</li> <li>Evidence Documentation: Attach screenshots and proof-of-concept details</li> <li>Risk Classification: Categorize vulnerabilities by severity and impact</li> </ul>"},{"location":"Features/#user-and-role-management","title":"User and Role Management","text":"<ul> <li>Granular Permissions: Define precise access controls for different user roles</li> <li>Team Collaboration: Enable secure collaboration between team members</li> <li>Activity Tracking: Monitor user actions and report access</li> </ul>"},{"location":"Features/#customer-portal","title":"Customer Portal","text":"<ul> <li>Client Access: Provide customers with secure access to their projects and reports</li> <li>Status Tracking: Allow clients to view project progress and status updates</li> <li>Report Download: Enable direct report download without assistance</li> </ul>"},{"location":"Features/#feature-documentation","title":"Feature Documentation","text":"<p>For detailed information on specific features, explore the following sections:</p> <ul> <li>Company &amp; Customer Management</li> <li>User Management &amp; Permissions</li> <li>Project Management</li> <li>Vulnerability Database</li> <li>Report Generation</li> <li>System Configuration</li> <li>Dashboard &amp; Analytics</li> </ul>"},{"location":"Features/#getting-started","title":"Getting Started","text":"<p>If you're new to APTRS, we recommend starting with the installation guides and then reviewing the post-deployment setup documentation before exploring specific features.</p>"},{"location":"Features/Users/users/","title":"User Management in APTRS","text":"<p>APTRS features a comprehensive user management system that enables secure access control and efficient team collaboration. The system allows administrators to create, modify, and manage user accounts while providing each user with personalized access based on their role and responsibilities.</p> <p></p>"},{"location":"Features/Users/users/#user-account-features","title":"User Account Features","text":"<ul> <li>Authentication: Secure login with username/email and password</li> <li>Profile Management: Users can update their profile information and upload profile photos</li> <li>Password Management: Self-service password changes and reset capabilities</li> <li>Activity Tracking: System logs user activities for audit purposes</li> </ul>"},{"location":"Features/Users/users/#user-types-and-access-levels","title":"User Types and Access Levels","text":"<p>APTRS implements a tiered access system to ensure proper security and functionality:</p>"},{"location":"Features/Users/users/#administrative-roles","title":"Administrative Roles","text":"<p>Admin Users - Full system access and configuration rights - User account management (creation, modification, deactivation) - Permission and group assignment - System-wide settings and configuration - Access to all projects and reports</p> <p>Non-Admin Users - Access based on assigned permissions and groups - Limited to specific functions based on role - Can be granted selective administrative capabilities</p> <p>Permission Management</p> <p>For detailed information on managing permissions and security groups, see the Permissions and Groups documentation.</p>"},{"location":"Features/Users/users/#user-classification","title":"User Classification","text":"<p>Users in APTRS are categorized based on their relationship to your organization:</p> <p>Internal Users (Staff) - Your organization's team members - Default classification for newly created users - Full access to internal systems based on their role - Can be assigned as project owners and team members</p> <p>External Users (Non-Staff) - Client representatives and external collaborators - Limited access to specific projects and reports - Customizable permission sets for client needs - Typically managed through the Customer Portal</p>"},{"location":"Features/Users/users/#user-management-best-practices","title":"User Management Best Practices","text":""},{"location":"Features/Users/users/#adding-new-users","title":"Adding New Users","text":"<ol> <li>Navigate to the Users section in the administrative interface</li> <li>Select \"Add User\" and complete the required fields</li> <li>Assign appropriate groups and permissions</li> <li>Set initial password or trigger email invitation</li> </ol>"},{"location":"Features/Users/users/#modifying-user-access","title":"Modifying User Access","text":"<p>User accounts can be modified at any time to: - Update contact information - Change role assignments - Adjust permission levels - Enable/disable specific features</p>"},{"location":"Features/Users/users/#user-deactivation-vs-deletion","title":"User Deactivation vs. Deletion","text":"<p>Important: Project Ownership</p> <p>Every project in APTRS must have an assigned owner. Deleting a user account that owns projects will cause system errors.</p> <p>Recommended Approach: Instead of deleting user accounts, set them to \"inactive\" status when: - An employee leaves your organization - A client relationship ends - A temporary user no longer needs access</p> <p>If Deletion is Necessary:</p> <ul> <li>Identify all projects owned by the user</li> <li>Reassign each project to a new owner</li> <li>Remove the user from all groups and permission sets</li> <li>Delete the account only after confirming all dependencies are resolved</li> </ul>"},{"location":"Features/Users/users/#user-security-features","title":"User Security Features","text":"<p>APTRS implements several security measures for user accounts:</p> <ul> <li>Password complexity requirements</li> <li>Failed login attempt monitoring</li> <li>Session timeout controls</li> <li>IP-based access restrictions (optional)</li> <li>Two-factor authentication support (available in select versions)</li> </ul> <p>By properly managing user accounts, you can ensure secure, efficient operation of your APTRS implementation while maintaining appropriate access controls for your penetration testing reports and client data.</p>"},{"location":"Features/company/company/","title":"Company Management in APTRS","text":"<p>APTRS provides a structured company management system that distinguishes between your organization and your clients. This separation is fundamental to how APTRS organizes projects, users, and reports.</p> <p>Key Benefits of Company Management</p> <ul> <li>Organization: Clear separation between internal and client work</li> <li>Branding: Customize reports with appropriate company logos</li> <li>Access Control: Manage permissions based on company associations</li> <li>Reporting: Generate professional reports with correct company attribution</li> </ul> <p></p>"},{"location":"Features/company/company/#accessing-company-management","title":"Accessing Company Management","text":"<p>The Company Management module can be accessed through:</p> <ol> <li>Direct URL navigation to <code>/companies</code></li> </ol> <p>Only administrators and users with company management permissions can access this feature.</p>"},{"location":"Features/company/company/#company-types","title":"Company Types","text":"<p>APTRS operates with two distinct company types, each serving different purposes within the platform.</p>"},{"location":"Features/company/company/#internal-company","title":"Internal Company","text":"<p>The internal company represents your organization\u2014the security team or consultancy using APTRS to deliver penetration testing services.</p> <p>Key Characteristics:</p> <ul> <li>Automatic Creation: Generated during first-time setup</li> <li>Single Instance: Only one internal company can exist in the system</li> <li>Customization: Can be renamed and branded to match your organization</li> <li>Persistence: Cannot be deleted as it's essential to system operation</li> </ul> <p>Internal Staff Management:</p> <ul> <li>All users created through the User Management interface are automatically assigned to the internal company</li> <li>These users appear in reports as members of your organization</li> <li>Internal users can be assigned roles like Penetration Tester, Manager, or Report Reviewer</li> </ul> <p>Internal Company Configuration</p> <p>Proper configuration of your internal company is crucial as it defines how your organization appears on all reports and communications. Be sure to: - Upload a high-quality company logo (recommended size: 300x100px) - Provide accurate company details including address and contact information - Set appropriate default email templates</p>"},{"location":"Features/company/company/#external-companies","title":"External Companies","text":"<p>External companies represent your clients or third-party organizations for whom you conduct security assessments.</p> <p>Key Characteristics:</p> <ul> <li>Manual Creation: Added as needed through the Company Management interface</li> <li>Multiple Instances: No limit to the number of external companies</li> <li>Client Representation: Each external company can have its own branding, contacts, and projects</li> <li>Deletion: Can be removed when client relationships end (with important caveats)</li> </ul> <p>External Company Benefits:</p> <ul> <li>Organize client projects under their respective companies</li> <li>Generate branded reports with client company details</li> <li>Create customer portals specific to each client</li> <li>Maintain separate communication threads per client</li> </ul>"},{"location":"Features/company/company/#comparison-of-company-types","title":"Comparison of Company Types","text":"Feature Internal Company External Companies Creation Automatic during setup Manually created as needed Quantity Single instance only Unlimited Users Internal staff Client representatives Deletion Not possible Possible with caution Projects Internal assessments Client assessments Primary Role Service provider Service recipient Report Appearance Author organization Target organization"},{"location":"Features/company/company/#user-association-with-companies","title":"User Association with Companies","text":"<p>APTRS maintains a clear distinction between internal and external users:</p> User Type Company Association Creation Method Primary Purpose Internal Your organization User Management interface Conducting assessments, creating reports External Client companies Customer section Accessing delivered reports, communication <p>External User Management</p> <p>For details on creating and managing external users, see the Customer Management documentation.</p>"},{"location":"Features/company/company/#managing-user-company-relationships","title":"Managing User-Company Relationships","text":"<p>Users in APTRS are always tied to a specific company:</p> <ol> <li>Internal users can be assigned to work on any project but remain associated with your internal company</li> <li>External users can only access information related to their specific company</li> <li>User permissions are influenced by both role and company association</li> <li>Email notifications are customized based on company settings</li> </ol>"},{"location":"Features/company/company/#projects-and-company-association","title":"Projects and Company Association","text":"<p>Each project in APTRS must be associated with a company:</p> <ul> <li>Internal Projects: Assessments conducted for your own organization</li> <li>External Projects: Client-commissioned security assessments</li> </ul> <p>This association determines how the project is categorized, who can access it, and how it appears in reports and dashboards.</p>"},{"location":"Features/company/company/#company-lifecycle-management","title":"Company Lifecycle Management","text":"<p>When client relationships change:</p> <ul> <li>Update company information as needed</li> <li>Archive completed projects before considering company deletion</li> <li>Export any necessary data for compliance or record-keeping</li> <li>Consider deactivating rather than deleting companies with historical data</li> </ul> <p>Deletion Warning</p> <p>Deleting a company will permanently remove: - All associated customer users and their access - Company information from all reports (potentially breaking report formatting) - Historical company data</p> <p>Always reassign or export critical data before deletion.</p>"},{"location":"Features/company/company/#creating-a-new-external-company","title":"Creating a New External Company","text":"<p>To add a new external company to APTRS:</p> <ol> <li>Navigate to the Company Management section</li> <li>Click the \"Add Company\" button</li> <li>Complete the company profile form with:</li> <li>Company name</li> <li>Address information</li> <li>Company logo (upload)</li> <li>Save the new company profile</li> </ol>"},{"location":"Features/company/company/#editing-company-information","title":"Editing Company Information","text":"<p>Company details can be modified at any time by:</p> <ol> <li>Navigating to the Company Management section</li> <li>Locating the company in the list</li> <li>Clicking the \"Edit\" action</li> <li>Updating the necessary information</li> <li>Saving changes</li> </ol> <p>All changes to company information will be reflected in new reports, but won't automatically update previously generated documents.</p>"},{"location":"Features/company/customer/","title":"Customer Management in APTRS","text":"<p>Customers in APTRS are external users who belong to external (non-internal) companies. You can manage these users from the Customer page, where external users are added and tracked, and they are included in reports as customer users.</p> <p></p>"},{"location":"Features/company/customer/#understanding-customer-users","title":"Understanding Customer Users","text":"<p>Customer users provide your clients with secure access to APTRS, allowing them to:</p> <ul> <li>View their projects and assessments</li> <li>Download finalized reports</li> <li>Track project status and timelines</li> <li>Access historical vulnerability data</li> <li>Communicate with your team</li> </ul> <p>Prerequisite: Email Configuration</p> <p>The customer invitation process requires a properly configured email (SMTP) server in APTRS. Without email configuration, invitations cannot be sent. See the Environment Configuration documentation for details on setting up email services.</p>"},{"location":"Features/company/customer/#adding-customers","title":"Adding Customers","text":"<p>When adding a customer, you only need to provide:</p> <ul> <li>Email: The customer's email address (must be valid to receive invitation)</li> <li>Company: The external company they belong to</li> </ul> <p>Unlike previous versions, you no longer need to manually set a password when creating customer accounts. Instead, APTRS uses a secure invitation process.</p>"},{"location":"Features/company/customer/#the-customer-invitation-process","title":"The Customer Invitation Process","text":"<ol> <li>An administrator or user with appropriate permissions creates a new customer account</li> <li>APTRS automatically generates an invitation with a secure registration link</li> <li>The system sends this invitation to the customer's email address</li> <li>The customer receives the email and clicks the registration link</li> <li>The customer sets their own password and completes account setup</li> <li>After accepting the invitation, the customer gains access to their company's APTRS portal</li> </ol> <p>Invitation Link Validity</p> <p>The invitation link is valid for 24 hours and can only be used once. If the link expires or has already been used, a new invitation must be sent.</p> <p>Email Configuration Required</p> <p>For invitations to work properly, your APTRS instance must have SMTP server settings correctly configured in the environment variables. Without this, invitation emails cannot be sent.</p>"},{"location":"Features/company/customer/#managing-customer-invitations","title":"Managing Customer Invitations","text":""},{"location":"Features/company/customer/#resending-invitations","title":"Resending Invitations","text":"<p>If a customer has not accepted their invitation (the status shows \"Pending\"), you can resend the invitation:</p> <ol> <li>Navigate to the Customer Management page</li> <li>Find the customer with pending status</li> <li>Click the \"Resend Invitation\" button</li> <li>The system will generate a new invitation link and send it to the customer</li> </ol> <p>This is useful when:</p> <ul> <li>The original invitation email was missed or filtered as spam</li> <li>The invitation link has expired (after 24 hours)</li> <li>The customer needs a reminder to complete their registration</li> <li>The previous link was already used but registration was not completed</li> </ul>"},{"location":"Features/company/customer/#customer-portal-access","title":"Customer Portal Access","text":"<p>Once customers have accepted their invitations and set up their accounts, they gain access to the APTRS customer portal. This secure portal provides:</p> <ol> <li>Project Dashboard: View all projects associated with their company</li> <li>Report Access: Download completed assessment reports</li> <li>Project Status: Track the progress of ongoing assessments</li> <li>Communication: Direct messaging with your team [TBD]</li> </ol>"},{"location":"Features/company/customer/#access-limitations","title":"Access Limitations","text":"<p>Customer users can only access information related to their own company. They cannot:</p> <ul> <li>View projects or reports from other companies</li> <li>Access internal APTRS administration features</li> <li>Modify assessment data or findings</li> </ul>"},{"location":"Features/company/customer/#best-practices-for-customer-management","title":"Best Practices for Customer Management","text":""},{"location":"Features/company/customer/#creating-customer-accounts","title":"Creating Customer Accounts","text":"<ul> <li>Create customer accounts before starting their projects</li> <li>Verify email addresses carefully to ensure invitations reach the correct recipients</li> <li>Add informative notes to customer profiles for internal reference</li> <li>Group customers properly by their respective companies</li> </ul>"},{"location":"Features/company/customer/#communication-management","title":"Communication Management","text":"<ul> <li>Inform customers via traditional channels that they will receive an APTRS invitation</li> <li>Provide instructions on what to do with the invitation</li> <li>Suggest checking spam folders if they don't receive the invitation</li> <li>Set expectations about what they'll be able to access in the portal</li> </ul>"},{"location":"Features/company/customer/#security-considerations","title":"Security Considerations","text":"<ul> <li>Review and adjust customer permissions as needed</li> <li>Periodically audit customer account activity</li> <li>Disable accounts for customers who no longer require access</li> </ul>"},{"location":"Features/company/customer/#troubleshooting-customer-invitations","title":"Troubleshooting Customer Invitations","text":""},{"location":"Features/company/customer/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"Issue Possible Cause Solution Invitation not received Incorrect email address Verify and update email, then resend Email filtered as spam Ask customer to check spam/junk folders SMTP configuration issue Check APTRS email configuration Invitation link expired 24-hour validity period passed Resend invitation Link already used once Resend invitation if needed Customer can't set password Password requirements not met Advise on password requirements Technical browser issue Suggest using different browser Access issues after setup Permission configuration Review customer permissions <p>Testing Invitations</p> <p>Before deploying to production, test the invitation process with an internal email address to ensure that the entire workflow functions correctly.</p>"},{"location":"Features/company/customer/#smtp-configuration-validation","title":"SMTP Configuration Validation","text":"<p>If customers aren't receiving invitations, verify your SMTP configuration:</p> <ol> <li>Check the environment variables for email settings</li> <li>Test email functionality through the APTRS administration panel</li> <li>Review server logs for email sending errors</li> <li>Ensure your email provider allows automated messages</li> </ol>"},{"location":"Features/configuration/configuration/","title":"Configuration","text":"<p>The Configuration section allows admin users or users with the Manage Configurations permission to add and manage various settings. In APTRS, users can define Project Types, such as \"Mobile Application Testing,\" which are used when creating projects and are also referenced in PDF and DOCX reports. Multiple project types can be added to suit different testing needs.</p> <p>In addition to project types, users can also create Report Standards. When generating a report, users are required to select the applicable testing standard, such as OWASP for web application testing. Users can add additional standards here, which can then be used in the generated reports.</p> <p>Version 2.0 Update</p> <p>As of APTRS version 2.0, users can now edit and delete existing project types and report standards. This provides more flexibility in managing your configuration settings and keeping them up-to-date.</p> <p></p>"},{"location":"Features/configuration/configuration/#managing-configuration-settings","title":"Managing Configuration Settings","text":"<p>The Configuration section in APTRS provides tools to customize the system according to your organization's needs. This section explains how to manage these configuration options.</p>"},{"location":"Features/configuration/configuration/#project-types","title":"Project Types","text":"<p>Project Types define the categories of security assessments your organization performs. These appear in project creation forms and are included in generated reports.</p>"},{"location":"Features/configuration/configuration/#adding-project-types","title":"Adding Project Types","text":"<p>To add a new project type:</p> <ol> <li>Navigate to the Configuration page</li> <li>Locate the Project Types section</li> <li>Click the \"Add Project Type\" button</li> <li>Enter the name of the project type (e.g., \"Web Application Assessment\", \"API Security Testing\")</li> <li>Click \"Save\" to add the project type</li> </ol>"},{"location":"Features/configuration/configuration/#editing-project-types-version-20","title":"Editing Project Types (Version 2.0+)","text":"<p>To modify an existing project type:</p> <ol> <li>Find the project type in the list</li> <li>Click the \"Edit\" icon next to the project type</li> <li>Update the name as needed</li> <li>Click \"Save\" to apply your changes</li> </ol> <p>Impact on Existing Projects</p> <p>Editing a project type will update it across all projects where it's used. Consider the impact on existing reports before making changes.</p>"},{"location":"Features/configuration/configuration/#deleting-project-types-version-20","title":"Deleting Project Types (Version 2.0+)","text":"<p>To remove a project type:</p> <ol> <li>Locate the project type in the list</li> <li>Click the \"Delete\" icon next to the project type</li> <li>Confirm the deletion when prompted</li> </ol>"},{"location":"Features/configuration/configuration/#report-standards","title":"Report Standards","text":"<p>Report Standards define the compliance frameworks or methodologies used in your security assessments, such as OWASP Top 10 or NIST guidelines.</p>"},{"location":"Features/configuration/configuration/#adding-report-standards","title":"Adding Report Standards","text":"<p>To add a new report standard:</p> <ol> <li>Navigate to the Configuration page</li> <li>Go to the Report Standards section</li> <li>Click \"Add Report Standard\"</li> <li>Enter the standard name (e.g., \"OWASP Top 10 2021\", \"NIST SP 800-53\")</li> <li>Click \"Save\" to add the standard</li> </ol>"},{"location":"Features/configuration/configuration/#editing-report-standards-version-20","title":"Editing Report Standards (Version 2.0+)","text":"<p>To modify an existing report standard:</p> <ol> <li>Find the standard in the list</li> <li>Click the \"Edit\" icon next to the standard</li> <li>Update the name as needed</li> <li>Click \"Save\" to apply your changes</li> </ol>"},{"location":"Features/configuration/configuration/#deleting-report-standards-version-20","title":"Deleting Report Standards (Version 2.0+)","text":"<p>To remove a report standard:</p> <ol> <li>Locate the standard in the list</li> <li>Click the \"Delete\" icon next to the standard</li> <li>Confirm the deletion when prompted</li> </ol>"},{"location":"Features/configuration/configuration/#best-practices-for-configuration-management","title":"Best Practices for Configuration Management","text":""},{"location":"Features/configuration/configuration/#standardization","title":"Standardization","text":"<ul> <li>Create a consistent naming convention for project types and standards</li> <li>Document your configuration choices for team reference</li> <li>Limit the number of project types to maintain clarity</li> <li>Use widely recognized standards when possible</li> </ul>"},{"location":"Features/configuration/configuration/#maintenance","title":"Maintenance","text":"<ul> <li>Periodically review and update your configurations</li> <li>Remove unused project types and standards</li> <li>Ensure configurations align with your current service offerings</li> <li>Consider version numbers in standard names (e.g., \"OWASP Top 10 2021\" vs \"OWASP Top 10 2017\")</li> </ul>"},{"location":"Features/configuration/configuration/#permissions","title":"Permissions","text":"<p>Only users with administrative privileges or the \"Manage Configurations\" permission can modify these settings. This restriction helps maintain consistency in your APTRS environment.</p>"},{"location":"Features/dashboard/dashboard/","title":"Dashboard","text":"<p>The Dashboard provides a comprehensive overview of your projects and retests, tailored specifically to the logged-in user. It serves as your personal command center, displaying only the projects and retests that are relevant to you as the owner.</p>"},{"location":"Features/dashboard/dashboard/#dashboard-overview","title":"Dashboard Overview","text":"<p>The Dashboard has been enhanced to provide at-a-glance statistics and detailed project information organized by status:</p> <ol> <li> <p>Status Counters - The top section displays count summaries of both projects and retests by status:</p> <ul> <li>On Hold</li> <li>In Progress</li> <li>Delayed</li> <li>Upcoming</li> </ul> </li> <li> <p>Project Status Sections - Below the counters, projects are organized into sections by their status:</p> <ul> <li>Each section displays projects where you are the owner</li> <li>Projects include key information such as project name and relevant dates</li> <li>Dates shown include start date, end date, and any status change dates</li> </ul> </li> </ol> <p></p>"},{"location":"Features/dashboard/dashboard/#projects-display-logic","title":"Projects Display Logic","text":"<p>Unlike the Projects View Page, which lists all projects within APTRS, the Dashboard is personalized to show only:</p> <ul> <li>Projects where you are the assigned owner</li> <li>Projects that match specific status criteria (On Hold, In Progress, Delayed, Upcoming)</li> <li>Completed projects that have active retests assigned to you</li> </ul> <p>This filtered view helps you focus on what needs your attention without being distracted by projects managed by other team members or completed projects with no pending actions.</p>"},{"location":"Features/dashboard/dashboard/#retest-integration","title":"Retest Integration","text":"<p>The Dashboard intelligently integrates retest information:</p> <ul> <li>Projects with active retests appear even if the original project is marked as completed</li> <li>If you're assigned as the owner of a retest but not the original project, the project will still appear on your Dashboard</li> <li>Retest status is clearly indicated alongside the project</li> </ul>"},{"location":"Features/dashboard/dashboard/#benefits-of-the-new-dashboard","title":"Benefits of the New Dashboard","text":"<p>The redesigned Dashboard provides several key benefits:</p> <ul> <li>Quick Status Assessment: Immediately see how many projects and retests are in each state</li> <li>Prioritization: Easily identify delayed or upcoming projects that need attention</li> <li>Comprehensive View: See both projects and their associated retests in one unified interface</li> <li>Personalized Experience: View only what's relevant to you as a user</li> </ul> <p>This personalized approach ensures you can quickly assess your workload, prioritize tasks, and track important project milestones without having to filter through projects that don't require your attention.</p>"},{"location":"Features/permission/permission/","title":"Groups and Permissions in APTRS","text":"<p>APTRS implements a robust role-based access control system that uses permissions and groups to manage user capabilities. This system ensures that users have appropriate access to features based on their responsibilities while maintaining system security.</p>"},{"location":"Features/permission/permission/#permission-management-overview","title":"Permission Management Overview","text":"<p>The permission system in APTRS follows these key principles:</p> <ul> <li>Permissions define specific capabilities within the system</li> <li>Groups bundle permissions together for easier assignment</li> <li>Users are assigned to one or more groups</li> <li>Inheritance ensures users receive all permissions from all their groups</li> </ul> <p></p>"},{"location":"Features/permission/permission/#access-control-architecture","title":"Access Control Architecture","text":""},{"location":"Features/permission/permission/#how-permissions-work","title":"How Permissions Work","text":"<p>Permissions in APTRS are predefined and hard-coded in the backend. Each permission controls access to specific features or APIs within the application. Important aspects include:</p> <ul> <li>Permissions cannot be created or modified through the user interface</li> <li>Each permission provides access to a specific set of functionality</li> <li>Permissions are granular to allow precise access control</li> <li>The system automatically checks permissions before allowing access to protected features</li> </ul>"},{"location":"Features/permission/permission/#group-management","title":"Group Management","text":"<p>Groups are collections of permissions that can be assigned to users. They simplify the process of permission assignment by bundling related capabilities:</p> <ul> <li>You can create custom groups through the Groups Management interface</li> <li>Each group can be assigned any combination of available permissions</li> <li>Groups can be modified at any time to adjust their permission sets</li> <li>Users can be assigned to multiple groups to combine permission sets</li> </ul> <p>Best Practice</p> <p>Create groups based on job functions rather than individuals. This approach makes it easier to maintain consistent permissions as your team changes.</p>"},{"location":"Features/permission/permission/#admin-users-and-special-privileges","title":"Admin Users and Special Privileges","text":"<p>Admin users in APTRS have special status within the permission system:</p> <ul> <li>Admin users have unrestricted access to all system features</li> <li>Admin status overrides any group-based permission restrictions</li> <li>Even with no assigned groups, admin users retain full system access</li> <li>Admin privileges cannot be limited through group assignments</li> </ul> <p>Admin Access</p> <p>Admin access should be granted sparingly and only to highly trusted users who require full system access. For most users, it's better to use appropriately configured permission groups.</p>"},{"location":"Features/permission/permission/#default-groups-and-special-considerations","title":"Default Groups and Special Considerations","text":"<p>When APTRS is first deployed, the system automatically creates several default groups with predefined permission sets. These groups serve as starting points for your permission structure.</p>"},{"location":"Features/permission/permission/#default-groups-list","title":"Default Groups List","text":"Group Name Primary Purpose Key Permissions Project Manager Manages projects and appears in reports Manage Projects, Assign Projects Manager Oversees operations and appears in reports Manage Projects, Assign Projects, Manage Users Administrator Complete system administration All permissions (similar to admin users) Penetration Tester Conducts assessments and adds findings Manage Projects (limited)"},{"location":"Features/permission/permission/#report-critical-groups","title":"Report-Critical Groups","text":"<p>Special Group Names</p> <p>The Project Manager and Manager groups are used by APTRS to identify users whose information should appear in generated reports. While you can modify the permissions assigned to these groups, do not rename them if you want report generation to function correctly.</p> <p>If these groups are renamed or removed:</p> <ul> <li>Reports may not include required management information</li> <li>Report templates may display errors or incomplete information</li> <li>Report quality and compliance could be affected</li> </ul>"},{"location":"Features/permission/permission/#system-permissions-reference","title":"System Permissions Reference","text":"<p>APTRS includes the following core permissions that can be assigned to groups (as of version 2.0):</p>"},{"location":"Features/permission/permission/#manage-users","title":"Manage Users","text":"<ul> <li>Capability: Comprehensive user management</li> <li> <p>Functions:</p> <ul> <li>Add, edit, and delete user accounts</li> <li>Create and manage groups</li> <li>Assign permissions to groups</li> <li>Manage user-group assignments</li> </ul> </li> </ul>"},{"location":"Features/permission/permission/#manage-projects","title":"Manage Projects","text":"<ul> <li>Capability: Full project lifecycle management</li> <li>Functions:<ul> <li>Create, edit, and delete projects</li> <li>Add vulnerabilities to projects</li> <li>Create and manage retests</li> <li>Generate and export reports</li> <li>Define project scope</li> <li>Note: By default, users are automatically set as owners of projects they create</li> </ul> </li> </ul>"},{"location":"Features/permission/permission/#assign-projects","title":"Assign Projects","text":"<ul> <li>Capability: Project ownership management</li> <li>Functions:<ul> <li>Select and assign project owners</li> <li>Reassign projects to different users</li> <li>Assign retest ownership</li> <li>Override automatic owner assignment</li> </ul> </li> </ul>"},{"location":"Features/permission/permission/#manage-vulnerability-data","title":"Manage Vulnerability Data","text":"<ul> <li>Capability: Vulnerability database administration</li> <li>Functions:<ul> <li>Add, edit, and delete vulnerability templates</li> <li>Manage vulnerability categories</li> <li>Maintain finding descriptions and remediation advice</li> </ul> </li> </ul>"},{"location":"Features/permission/permission/#manage-customers","title":"Manage Customers","text":"<ul> <li>Capability: External user management</li> <li> <p>Functions:</p> <ul> <li>Create and manage customer accounts</li> <li>Send and manage customer invitations</li> <li>Assign customers to companies</li> <li>Reset customer credentials when needed</li> </ul> </li> </ul>"},{"location":"Features/permission/permission/#manage-companies","title":"Manage Companies","text":"<ul> <li>Capability: Company profile administration</li> <li>Functions:<ul> <li>Create and edit company profiles</li> <li>Upload and manage company logos</li> <li>Configure company-specific report settings</li> <li>Manage company-project associations</li> </ul> </li> </ul>"},{"location":"Features/permission/permission/#manage-configurations","title":"Manage Configurations","text":"<ul> <li>Capability: System configuration</li> <li>Functions:<ul> <li>Adjust system-wide settings</li> <li>Set default behaviors and preferences</li> </ul> </li> </ul>"},{"location":"Features/permission/permission/#best-practices-for-permission-management","title":"Best Practices for Permission Management","text":""},{"location":"Features/permission/permission/#creating-an-effective-permission-structure","title":"Creating an Effective Permission Structure","text":"<ol> <li>Start with Default Groups: Use the provided groups as templates</li> <li>Create Functional Groups: Align groups with job functions or departments</li> <li>Follow Least Privilege: Grant only the permissions necessary for each role</li> <li>Use Descriptive Names: Name groups clearly to reflect their purpose</li> <li>Document Your Structure: Maintain documentation of your permission scheme</li> </ol>"},{"location":"Features/permission/permission/#security-considerations","title":"Security Considerations","text":"<ul> <li>Regularly audit user permissions and group assignments</li> <li>Promptly remove permissions when users change roles</li> <li>Consider creating temporary groups for contractors or temporary staff</li> <li>Review admin user assignments periodically</li> </ul> <p>Permission Drift</p> <p>Without regular auditing, permissions tend to accumulate over time as users are added to groups but rarely removed. This \"permission drift\" can create security vulnerabilities as users retain access they no longer need.</p>"},{"location":"Features/project/Vulnerability/","title":"Project Vulnerabilities","text":"<p>Project vulnerabilities represent security issues found during assessments. Each vulnerability includes details like description, solution, and CVSS score.</p> <p></p>"},{"location":"Features/project/Vulnerability/#adding-vulnerabilities","title":"Adding Vulnerabilities","text":"<p>Three ways to add vulnerabilities:</p> <ul> <li>Search Template: Find and import from Vulnerability Database</li> <li>Add New: Create blank vulnerability entry</li> <li>Upload CSV: Import from Nessus or compatible scan files</li> </ul>"},{"location":"Features/project/Vulnerability/#validation-rules","title":"Validation Rules","text":"<ul> <li>Cannot add vulnerabilities to completed projects</li> <li>Project must have defined scope in Project Scope tab</li> <li>Only active projects (Upcoming, In Progress, Delayed, On Hold) accept new vulnerabilities</li> </ul>"},{"location":"Features/project/Vulnerability/#publishing-vulnerabilities","title":"Publishing Vulnerabilities","text":"<ul> <li>Toggle vulnerabilities between published/unpublished state</li> <li>Only published vulnerabilities appear in customer dashboard</li> <li>Unpublished vulnerabilities remain visible only to internal users</li> <li>Use for reviewing findings before sharing with customers</li> </ul>"},{"location":"Features/project/Vulnerability/#csv-import","title":"CSV Import","text":"<p>Required columns for CSV import:</p> <ul> <li>Host: IP address or URL</li> <li>Port: Network port</li> <li>Name: Vulnerability title</li> <li>Description: Details about the issue</li> <li>Solution: Remediation steps</li> <li>Risk: Severity level (Critical, High, Medium, Low, Info)</li> </ul>"},{"location":"Features/project/Vulnerability/#vulnerability-status","title":"Vulnerability Status","text":"<p>Three possible statuses:</p> <ul> <li>Vulnerable: Unresolved issue</li> <li>Confirmed Fix: Issue resolved</li> <li>Accepted Risk: Issue acknowledged as acceptable risk</li> </ul>"},{"location":"Features/project/Vulnerability/#vulnerability-instances","title":"Vulnerability Instances","text":"<p>Each vulnerability requires at least one instance with:</p> <ul> <li>Specific location (URL, parameter, IP, port)</li> <li>Individual status tracking</li> <li>Independent verification</li> </ul> <p></p>"},{"location":"Features/project/project-summary/","title":"Project Summary","text":"<p>The Project Summary provides a comprehensive overview of your project with key details including status, dates, team information, and descriptions. It's the central hub for managing project status and accessing essential project information.</p> <p></p>"},{"location":"Features/project/project-summary/#key-features","title":"Key Features","text":""},{"location":"Features/project/project-summary/#project-status-management","title":"Project Status Management","text":"<p>The Project Summary displays the current status of your project and allows authorized users to change it:</p> <ul> <li> <p>Mark as Complete: Finalize a project when testing is finished</p> <ul> <li>Automatically sends email notification to customer</li> <li>Prevents further vulnerability additions</li> <li>All vulnerabilities are automatically marked as published when project is completed</li> </ul> </li> <li> <p>Put On Hold: Temporarily pause a project</p> <ul> <li>Requires reason for hold (displayed to customer)</li> <li>Automatically sends notification email with reason to customer</li> </ul> </li> </ul>"},{"location":"Features/project/project-summary/#project-information","title":"Project Information","text":"<p>The summary displays essential project details:</p> <ul> <li>Company name</li> <li>Project type and testing type</li> <li>Standards being followed (e.g., OWASP TOP 10 2021)</li> <li>Start and end dates</li> <li>Project status indicator</li> </ul>"},{"location":"Features/project/project-summary/#project-team-management","title":"Project Team Management","text":"<ul> <li>View current project owners</li> <li>Edit project owners directly from summary (with appropriate permissions)</li> <li>Multiple project owners can be assigned for collaboration</li> </ul>"},{"location":"Features/project/project-summary/#project-description","title":"Project Description","text":"<ul> <li>View project exception details</li> <li>Read full project description with testing scope and objectives</li> <li>Access rich text editor for description updates</li> </ul>"},{"location":"Features/project/project-summary/#status-behavior","title":"Status Behavior","text":"<ul> <li>Project status affects both the main project and any retests</li> <li>Project and retest share the same status (Upcoming, In Progress, Delayed, On Hold, Completed)</li> <li>Status changes trigger appropriate notifications</li> </ul>"},{"location":"Features/project/project-summary/#edit-capabilities","title":"Edit Capabilities","text":"<p>Users with proper permissions can:</p> <ul> <li>Edit project details directly from the summary page</li> <li>Update project owners</li> <li>Modify project descriptions</li> </ul> <p>Permission Requirements</p> <p>Editing project owners requires admin privileges or the \"Assign Projects\" permission</p>"},{"location":"Features/project/project-view/","title":"Project Management","text":"<p>Projects in APTRS represent individual penetration testing engagements. Each project is linked to a company and contains vulnerabilities, reports, and other assessment data.</p> <p></p>"},{"location":"Features/project/project-view/#project-view","title":"Project View","text":"<ul> <li>Shows all projects</li> <li>Filter projects by status (In Progress, Delayed, On Hold, Upcoming, Completed)</li> <li>Provides overview of all ongoing and completed assessments</li> </ul>"},{"location":"Features/project/project-view/#project-status","title":"Project Status","text":"<p>Status is automatically determined by dates:</p> <ul> <li>Upcoming: Start date is in the future</li> <li>In Progress: Between start and end dates</li> <li>Delayed: End date has passed</li> <li>Completed: Manually marked as completed</li> </ul>"},{"location":"Features/project/project-view/#project-details","title":"Project Details","text":"<ul> <li>Company association cannot be changed after creation</li> <li>Other details (type, dates, description) can be edited anytime</li> </ul>"},{"location":"Features/project/project-view/#project-owners","title":"Project Owners","text":"<ul> <li>Multiple owners can be assigned to a project</li> <li>Requires admin rights or \"Assign Projects\" permission</li> <li>Project creator becomes owner by default</li> </ul>"},{"location":"Features/project/report/","title":"Project Reports","text":"<p>Generate comprehensive reports for your security assessments in multiple formats. Reports include all vulnerabilities, their details, and project information.</p> <p></p>"},{"location":"Features/project/report/#report-generation","title":"Report Generation","text":"<p>APTRS offers three report formats:</p> <ul> <li>PDF: Professional, polished reports with full formatting</li> <li>Excel: Spreadsheet format for data analysis</li> <li>DOCX: Word document format (still experimental in version 2.0)</li> </ul>"},{"location":"Features/project/report/#version-20-improvements","title":"Version 2.0 Improvements","text":"<ul> <li>Standards are now saved in project details instead of being selected during report generation</li> <li>Streamlined report generation process with fewer steps</li> <li>Consistent report formatting across multiple reports for the same project</li> </ul> <p>DOCX Status</p> <p>DOCX report generation remains an experimental feature as of version 2.0. It may be enhanced with additional customization options or modified in future releases.</p>"},{"location":"Features/project/report/#report-customization","title":"Report Customization","text":""},{"location":"Features/project/report/#pdf-reports","title":"PDF Reports","text":"<p>APTRS uses the WeasyPrint Python library to convert HTML into PDF. You can modify the HTML and CSS files to match your requirements.</p>"},{"location":"Features/project/report/#docx-reports","title":"DOCX Reports","text":"<p>APTRS leverages <code>python-docxtpl</code>, CKEditor WYSIWYG, and <code>html2docx</code> to create DOCX files. Vulnerability and project details are entered via CKEditor, converted to DOCX, and integrated with templates.</p>"},{"location":"Features/project/report/#customization-resources","title":"Customization Resources","text":"<ul> <li>Templates: HTML and DOCX Report Templates</li> <li>CSS Files: CSS for PDF Reports</li> </ul>"},{"location":"Features/project/report/#report-limitations","title":"Report Limitations","text":""},{"location":"Features/project/report/#pdf-reports_1","title":"PDF Reports","text":"<ul> <li>WeasyPrint doesn't support JavaScript execution</li> <li>Charts are generated as static images instead of interactive elements</li> <li>Limited customization of charts via HTML/CSS</li> </ul>"},{"location":"Features/project/report/#docx-reports_1","title":"DOCX Reports","text":"<ul> <li>Uses combination of <code>python-docx</code>, <code>python-docxtpl</code>, and <code>html2docx</code></li> <li>Cannot automatically update or modify charts with dynamic values</li> </ul>"},{"location":"Features/project/retest/","title":"Project Retest","text":"<p>Retests verify if vulnerabilities have been properly fixed by clients after the initial assessment.</p> <p></p>"},{"location":"Features/project/retest/#key-features","title":"Key Features","text":"<ul> <li>Assign specific owners to handle retest assessments</li> <li>Track fixed and unfixed vulnerabilities</li> <li>Generate separate retest reports</li> <li>Put retests on hold with documented reasons</li> </ul>"},{"location":"Features/project/retest/#status-management","title":"Status Management","text":"<ul> <li>Project and retest share the same status system</li> <li>If a project has an active retest, its status is based on the retest dates</li> <li>Without a retest, status is calculated from project start/end dates</li> <li>Both project and retest can be put on hold with a documented reason</li> </ul>"},{"location":"Features/project/retest/#retest-requirements","title":"Retest Requirements","text":"<ul> <li>Can only be added to completed projects</li> <li>Only one active retest allowed at a time</li> <li>Cannot be edited after creation (but can be deleted)</li> </ul>"},{"location":"Features/project/retest/#owner-assignment","title":"Owner Assignment","text":"<ul> <li>Creator becomes owner by default</li> <li>Users with admin rights or \"Assign Projects\" permission can select different owners</li> </ul>"},{"location":"Features/project/scope/","title":"Project Scope","text":"<p>Project scope defines the targets for your assessment, including URLs, IP addresses, or application names.</p> <p></p>"},{"location":"Features/project/scope/#managing-scope","title":"Managing Scope","text":"<ul> <li>Add New: Add individual scope items</li> <li>Add Multiple: Import multiple targets at once</li> <li>Edit/Delete: Modify or remove existing scope items</li> <li>Description: Optional details about each target</li> </ul>"},{"location":"Features/project/scope/#requirements","title":"Requirements","text":"<ul> <li>At least one scope item must be defined before adding vulnerabilities</li> <li>Each scope item includes a target and optional description</li> </ul>"},{"location":"Features/vulnerabilityDB/vulnerability/","title":"Vulnerability Database","text":"<p>The Vulnerability Database (also called Templates) is a powerful feature in APTRS that provides a centralized repository of security findings that can be reused across multiple penetration testing projects. This feature significantly enhances efficiency, consistency, and reporting quality throughout your security assessment workflow.</p> <p></p>"},{"location":"Features/vulnerabilityDB/vulnerability/#overview","title":"Overview","text":"<p>The Vulnerability Database serves as a knowledge base for your organization's security findings, allowing you to:</p> <ul> <li>Maintain a library of well-documented security vulnerabilities</li> <li>Ensure consistent vulnerability descriptions across all reports</li> <li>Standardize remediation advice and technical details</li> <li>Save time by reusing content rather than recreating it</li> <li>Improve report quality with polished, pre-reviewed findings</li> </ul>"},{"location":"Features/vulnerabilityDB/vulnerability/#key-benefits","title":"Key Benefits","text":"<p>Time Savings</p> <p>Security consultants can save hours per assessment by reusing findings instead of rewriting standard vulnerabilities for each project.</p>"},{"location":"Features/vulnerabilityDB/vulnerability/#consistency-across-projects","title":"Consistency Across Projects","text":"<p>By using templates from the Vulnerability Database, your organization ensures:</p> <ul> <li>Uniform vulnerability naming conventions</li> <li>Consistent severity ratings for similar issues</li> <li>Standardized remediation recommendations</li> <li>Professional, error-free descriptions</li> </ul>"},{"location":"Features/vulnerabilityDB/vulnerability/#working-with-the-vulnerability-database","title":"Working with the Vulnerability Database","text":""},{"location":"Features/vulnerabilityDB/vulnerability/#accessing-the-database","title":"Accessing the Database","text":"<p>The Vulnerability Database can be accessed through:</p> <ol> <li>The main navigation sidebar under \"Vulnerability DB\"</li> <li>Direct URL navigation to <code>/vulnerabilities</code></li> </ol>"},{"location":"Features/vulnerabilityDB/vulnerability/#creating-new-vulnerability-templates","title":"Creating New Vulnerability Templates","text":"<p>To add a new vulnerability template:</p> <ol> <li>Navigate to the Vulnerability Database</li> <li>Click the \"Add Vulnerability\" button</li> <li>Complete the vulnerability form with the following information:</li> <li>Title: Clear, concise name of the vulnerability</li> <li>Description: Detailed explanation of the issue</li> <li>Impact: Business and security implications</li> <li>Solution: Recommended remediation steps</li> <li>References: Links to relevant standards or resources</li> <li>CVSS Score: Calculated severity rating</li> <li>Categories: Classification tags for the vulnerability</li> </ol>"},{"location":"Features/vulnerabilityDB/vulnerability/#using-templates-in-projects","title":"Using Templates in Projects","text":"<p>APTRS provides multiple methods to access and use vulnerability templates within projects:</p>"},{"location":"Features/vulnerabilityDB/vulnerability/#method-1-real-time-search-in-add-vulnerability","title":"Method 1: Real-time Search in Add Vulnerability","text":"<p>When adding new vulnerabilities to a project:</p> <ol> <li>Click \"Search\" in the project vulnerability section</li> <li>Start typing in the title field</li> <li>A real-time dropdown will appear showing matching templates</li> <li>Select the appropriate template from the dropdown</li> <li>All template details will be automatically populated</li> <li>Customize project-specific information if needed</li> <li>Save the vulnerability to the project</li> </ol>"},{"location":"Features/vulnerabilityDB/vulnerability/#method-2-edit-vulnerability-title-search","title":"Method 2: Edit Vulnerability Title Search","text":"<p>When editing an existing vulnerability in a project:</p> <ol> <li>Open the vulnerability for editing</li> <li>Click in the title field</li> <li>Begin typing to see matching template options</li> <li>Select a template from the dropdown that appears</li> <li>Confirm you want to replace the current content with the template</li> <li>Adjust any details to match your specific findings</li> <li>Save the updated vulnerability</li> </ol> <p>Quick Template Access</p> <p>The real-time search feature makes it easy to find templates as you type, without having to navigate to a separate template section. This streamlines the process of adding standardized findings to your projects.</p> <p>Template Customization</p> <p>When using a template, you can still modify any of the vulnerability details to match the specific context of your current project while maintaining the core information.</p>"},{"location":"Features/vulnerabilityDB/vulnerability/#managing-the-vulnerability-database","title":"Managing the Vulnerability Database","text":""},{"location":"Features/vulnerabilityDB/vulnerability/#organization-best-practices","title":"Organization Best Practices","text":"<p>For optimal management of your vulnerability database:</p> <ul> <li>Categorize effectively: Create logical groupings for easier searching</li> <li>Use consistent naming: Establish naming conventions for similar issues</li> <li>Include technical details: Provide sufficient technical information for verification</li> <li>Maintain references: Keep external links and standards up to date</li> <li>Review periodically: Schedule regular reviews of database content</li> </ul>"},{"location":"Features/vulnerabilityDB/vulnerability/#permissions","title":"Permissions","text":"<p>Access to the Vulnerability Database is controlled by the \"Manage Vulnerability Data\" permission. Users with this permission can:</p> <ul> <li>Create new vulnerability templates</li> <li>Edit existing templates</li> <li>Delete obsolete templates</li> </ul>"},{"location":"Features/vulnerabilityDB/vulnerability/#troubleshooting","title":"Troubleshooting","text":""},{"location":"Features/vulnerabilityDB/vulnerability/#common-issues","title":"Common Issues","text":"Issue Solution Template not appearing in search Check category assignments and spelling Unable to edit template Verify you have \"Manage Vulnerability Data\" permission Duplicate templates Search before creating new templates; merge if necessary Inconsistent formatting Establish and follow organizational style guidelines"},{"location":"Features/vulnerabilityDB/vulnerability/#best-practices-for-vulnerability-templates","title":"Best Practices for Vulnerability Templates","text":""},{"location":"Features/vulnerabilityDB/vulnerability/#content-quality","title":"Content Quality","text":"<ol> <li>Be thorough but concise: Include all relevant details without unnecessary text</li> <li>Use clear language: Avoid jargon when possible, define technical terms</li> <li>Include verification steps: Add steps to reproduce the vulnerability</li> <li>Provide practical remediation: Ensure solutions are actionable</li> <li>Cite authoritative sources: Reference industry standards (OWASP, CWE, etc.)</li> </ol> <p>Example Template Structure</p> Text Only<pre><code>Title: Insecure Direct Object Reference (IDOR)\n\nDescription: The application fails to properly verify that the requesting user\nhas access to the requested resource. By manipulating resource identifiers (IDs),\nan attacker can access other users' data or functionality.\n\nImpact: This vulnerability allows unauthorized access to sensitive information,\npotentially leading to data breaches and privacy violations.\n\nSolution: Implement proper access control checks that verify the authenticated\nuser has permission to access the requested resource.\n\nReferences:\n- OWASP Top 10 2021: A01 Broken Access Control\n- CWE-639: Authorization Bypass Through User-Controlled Key\n</code></pre>"},{"location":"custom-report/docx/company-user/","title":"Context Variables for Company and Users","text":""},{"location":"custom-report/docx/company-user/#1-internal-company-name","title":"1. Internal Company Name","text":"<ul> <li> <p>Description: </p> <p>This variable will provide the name of the internal company (your own company) that is linked to the APTRS. It fetches the company name from the <code>Company</code> model where the <code>internal</code> field is set to <code>True</code>.</p> </li> <li> <p>Usage Example:</p> Python<pre><code>Company Who DID the Pentest: {{ mycompany }}\n</code></pre> </li> </ul>"},{"location":"custom-report/docx/company-user/#2-project-manager-users","title":"2. Project Manager Users","text":"<ul> <li> <p>Description:</p> <p>This variable gives access to all the internal users who are part of the \"Project Manager\" group. You can loop through this list to display details like the name of the project managers working on the project.</p> </li> <li> <p>Usage Example:</p> Python<pre><code>Project Managers:\n\n        {% for user in projectmanagers %}\n            {{ user.full_name }}  {{ user.position }} {{ user.email }}\n        {% endfor %}\n</code></pre> </li> </ul>"},{"location":"custom-report/docx/company-user/#3-customer-company-users","title":"3. Customer Company Users","text":"<ul> <li> <p>Description:</p> <p>This variable provides access to the users who belong to the customer\u2019s company for the project. It retrieves the list of active users associated with the project\u2019s customer company.</p> </li> <li> <p>Usage Example:</p> Text Only<pre><code>    Customer Users:\n\n        {% for user in customeruser %}\n            {{ user.full_name }} {{ user.position }} {{ user.email }}\n        {% endfor %}\n</code></pre> </li> </ul>"},{"location":"custom-report/docx/docx/","title":"Docx","text":"<p>APTRS provides the ability to generate detailed DOCX reports using customizable templates. You can use Jinja2 template tags within your <code>.docx</code> templates to dynamically populate project and vulnerability data. This guide explains how to customize your template and use available context variables.</p>"},{"location":"custom-report/docx/docx/#template-location","title":"Template Location","text":"<p>The default template is located at: <code>/APTRS/templates/report.docx</code></p> <p>You can replace this file with your custom <code>.docx</code> template while keeping the required placeholders intact.</p>"},{"location":"custom-report/docx/docx/#using-template-tags","title":"Using Template Tags","text":"<p>The <code>.docx</code> template uses Jinja2 syntax for placeholders and loops. Below are some examples:</p>"},{"location":"custom-report/docx/docx/#placeholders","title":"Placeholders","text":"<ul> <li>Syntax: <code>{{ variable_name }}</code></li> <li>Example: To display the project name, use: <code>{{ project.name }}</code></li> </ul>"},{"location":"custom-report/docx/docx/#loops","title":"Loops","text":"<ul> <li>Syntax: <code>{% for item in items %}...{% endfor %}</code></li> <li>Example: To list all vulnerabilities:</li> </ul> Python<pre><code>{% for vulnerability in vulnerabilities %}\n\n{{ vulnerability.vulnerabilityname }} (CVSS: {{ vulnerability.cvssscore }}) {% endfor %}\n</code></pre>"},{"location":"custom-report/docx/docx/#conditional-statements","title":"Conditional Statements","text":"<ul> <li>Syntax: <code>{% if condition %}...{% else %}...{% endif %}</code></li> <li>Example: To check if a project has vulnerabilities:</li> </ul> Python<pre><code>{% if vulnerabilities %} \nVulnerabilities are present. \n{% else %} \nNo vulnerabilities found. \n{% endif %}\n</code></pre>"},{"location":"custom-report/docx/docx/#available-context-variables","title":"Available Context Variables","text":"Variable Description <code>project</code> The project object for which the report is being generated. Contains all project details. <code>owners</code> User details of All Project Owners <code>project_exception</code> Project Exceptions <code>project_description</code> Project Description <code>vulnerabilities</code> Queryset of vulnerabilities for the project, ordered by CVSS score (higher to lower). <code>mycomany</code> The name of the internal (your company) company. <code>projectmanagers</code> Queryset of users in the \"Project Manager\" group. <code>customeruser</code> Queryset of customer users associated with the project's customer company. <code>projectscope</code> Queryset of all project scopes for the project. <code>totalretest</code> List of retest schedules and owners. <code>totalvulnerability</code> Total count of vulnerabilities for the project. <code>Report_type</code> The type of report being generated (e.g., Audit, Re-Audit). <code>standard</code> The standard or methodology being used for the report. <code>currentdate</code> Get Current Date if needed in the report <code>page_break</code> Allows you to add page break in the docx report such as page break after each vulnerability details <code>new_line</code> Allows you to add a new line if needed"},{"location":"custom-report/docx/docx/#docx-formatting-with-jinja2","title":"Docx Formatting with Jinja2","text":"<p>By default, Jinja2 adds blank lines with conditions or loops, which can be problematic for Docx formatting. Unlike HTML, where empty lines have minimal impact, in Docx, this can lead to extra rows in tables or increased table width.</p> <p>APTRS uses the docxtpl library, based on Python-docx and Jinja2, for template-based rendering. To reduce blank lines, you can use Jinja2's whitespace control.</p> <p>However, this method doesn't always work flawlessly; it may inadvertently remove important elements like tables along with extra spaces. A simpler solution can involve using a single line of code.</p> <p>You can modify the code like this:</p> Python<pre><code>##Instead of new line for code\n{% if vulnerabilities %} \nVulnerabilities are present. \n{% else %} \nNo vulnerabilities found. \n{% endif %}\n\n\n## you can change it to like this on a single line \n\n{% if vulnerabilities %} Vulnerabilities are present. {% else %} No vulnerabilities found. {% endif %}\n</code></pre>"},{"location":"custom-report/docx/docx/#color-and-conditions","title":"Color and Conditions","text":"<p>Each severity level in the report is represented by different colors: low or informational is often green or light blue, while high severity is red. Status can also be color-coded, with fixed vulnerabilities in green and open ones in red or orange.</p> <p>In HTML reports, you can add severity values to the tag's class attribute and create CSS to apply the colors.</p> <p>For DOCX reports, colors cannot be applied to undefined elements, limiting customization. To assign colors based on severity\u2014like red for critical and orange for high\u2014include them directly in the conditional statements within your DOCX template.</p> Python<pre><code>{% if severity == 'Critical' %} severity with red color. {% elif severity == 'Low' %} severity with green color. {% endif %}\n</code></pre> <p></p> <p>Note</p> <p>Adding Jinja2 White Space control to this will remove the color.</p> <p>What if instead of just color for the text, we want to add color for the cell in the table like below  </p> Name Status Severity SQL Injection Vulnerable Confirm Fixed <p>We can do that as well with cellbg in the table, with hex color code like below:</p> Python<pre><code>{% cellbg 'FF491C' if vulnerability.vulnerabilityseverity== 'Critical' else 'F66E09' if vulnerability.vulnerabilityseverity== 'High' else 'FBBC02' if vulnerability.vulnerabilityseverity== 'Medium' else '20B803' if vulnerability.vulnerabilityseverity== 'Low' else '3399FF' %}{{ vulnerability.vulnerabilityseverity}}\n</code></pre> <p></p>"},{"location":"custom-report/docx/other/","title":"Context Variables for Vulnerabilities and Report Data","text":""},{"location":"custom-report/docx/other/#1-total-vulnerabilities","title":"1. Total Vulnerabilities","text":"<ul> <li>Description:   Provides the total count of vulnerabilities associated with a project.</li> <li>Usage Example:   You can display the total number of vulnerabilities for the project.</li> </ul> Python<pre><code>Total Vulnerabilities: {{ totalvulnerability }}\n</code></pre>"},{"location":"custom-report/docx/other/#2-report-type","title":"2. Report Type","text":"<ul> <li>Description:   Specifies the type of report being generated. This can include types like \"Audit\" or \"Re-Audit\".</li> <li>Usage Example:   Show the type of the report (Audit or Re-Audit).</li> </ul> Python<pre><code>  Report Type: {{ Report_type }}\n</code></pre>"},{"location":"custom-report/docx/other/#3-report-standard","title":"3. Report Standard","text":"<ul> <li>Description:   The standard or methodology being used for generating the report (e.g., OWASP, NIST). It will be in the list format, you can use below example to get in a text separated by comma.</li> <li>Usage Example:   Display the methodology or standard used in the vulnerability report.</li> </ul> Python<pre><code>  Report Standard: {{ standard|join(', ') }} \n</code></pre>"},{"location":"custom-report/docx/other/#4-current-date","title":"4. Current Date","text":"<ul> <li> <p>Description:   Get the current date if needed in the report.</p> </li> <li> <p>Usage Example: Python<pre><code>Report Generated On: {{ currentdate }}   \n# OR\n{{ currentdate.strftime('%B %d, %Y') }}\n</code></pre></p> </li> </ul>"},{"location":"custom-report/docx/other/#5-page-break","title":"5.  Page Break","text":"<ul> <li> <p>Description:    Allows you to add a page break in the DOCX report, such as after each vulnerability's details.</p> </li> <li> <p>Usage Example: Python<pre><code>  {% if vulnerability %}\n  {{ page_break }}\n  {% endif %}\n</code></pre></p> </li> </ul>"},{"location":"custom-report/docx/other/#6-new-line","title":"6. New Line","text":"<ul> <li> <p>Description:    Allows you to add a new line if needed in the report.</p> </li> <li> <p>Usage Example: Python<pre><code>  Vulnerability Details:  \n  CVSS Score{{ new_line }} 8.8\n</code></pre></p> </li> </ul>"},{"location":"custom-report/docx/project/","title":"Project","text":""},{"location":"custom-report/docx/project/#project-model-variables-for-template-customization","title":"Project Model Variables for Template Customization","text":"<p>The <code>Project</code> model in APTRS contains the following fields that can be used as template variables in your custom report templates. These variables are passed as part of the context to the report Docx, allowing you to display or manipulate project-related data in your custom reports.</p>"},{"location":"custom-report/docx/project/#available-variables-and-their-usage","title":"Available Variables and Their Usage","text":"<ol> <li> <p><code>project.name</code> </p> <ul> <li>Represents the name of the project.  </li> <li>Example usage in HTML: Python<pre><code>Project Name: {{ project.name }}\n</code></pre></li> </ul> </li> <li> <p><code>project.companyname</code> </p> <ul> <li>A foreign key to the <code>Company</code> model, representing the company associated (Customer Company) with the project.  </li> <li>Example usage: Python<pre><code>Company Name: {{ project.companyname.name }}\n</code></pre></li> </ul> </li> <li> <p><code>project_exception</code> </p> <ul> <li>A detailed description of the project.  </li> <li>Example usage: Python<pre><code>Description: {{p project_exception}}\n</code></pre></li> <li>It uses CKeditor HTML data, its converted into the docx format from HTML, hence its required to use <code>p</code> at the start of the tag.</li> </ul> </li> <li> <p><code>project.projecttype</code> </p> <ul> <li>Specifies the type of project.  </li> <li>Example usage: Python<pre><code>Project Type: {{ project.projecttype }}\n</code></pre></li> </ul> </li> <li> <p><code>project.startdate</code> </p> <ul> <li>The start date of the project.  </li> <li>Example usage: Python<pre><code>Start Date: {{ project.startdate }}\n</code></pre></li> <li>You can also modify the date format      Python<pre><code>    Project Start Date: {{ project.startdate.strftime(\"%d/%m/%Y\") }}\n</code></pre></li> </ul> </li> <li> <p><code>project.enddate</code> </p> <ul> <li>The end date of the project.  </li> <li>Example usage: Python<pre><code>&lt;End Date: {{ project.enddate }}\n</code></pre></li> <li>You can also modify the date format      Python<pre><code>    Project End Date: {{project.enddate.strftime(\"%d/%m/%Y\") }}\n</code></pre></li> </ul> </li> <li> <p><code>project.testingtype</code> </p> <ul> <li>The type of testing performed for the project (e.g., White Box, Black Box).  </li> <li>Example usage: Python<pre><code>Testing Type: {{ project.testingtype }}\n</code></pre></li> </ul> </li> <li> <p><code>project_exception</code> </p> <ul> <li>Notes or exceptions for the project, if any.  </li> <li>Example usage: Python<pre><code>Exceptions: {{p project_exception }}\n</code></pre></li> <li>It uses CKeditor HTML data, its converted into the docx format from HTML, hence its required to use <code>p</code> at the start of the tag.</li> <li>In most cases if you don't have exceptions and in your report you only this if exception is there you are also do it with conditions.   Python<pre><code>{% if project_exception %}\nExceptions: {{p project_exception }}\n{% endif %}\n</code></pre></li> </ul> </li> <li> <p><code>project.owner</code> </p> <ul> <li>Note: This is not available, due to issues with the method provided by django to loop many to many database relation, it does not work with the jinja2. </li> </ul> </li> <li> <p><code>project.status</code> </p> <ul> <li>The current status of the project, based on <code>PROJECT_STATUS_CHOICES</code> (e.g., Upcoming, In Progress, Delay, Completed).  </li> <li>Example usage: Python<pre><code>Status: {{ project.status }}\n</code></pre></li> </ul> </li> </ol> <p>In order to get Project owner details, APTRS provide a seperate context and tag <code>owners</code> which contain user details for project owners. In order to use it you have to loop through details like below:</p> Python<pre><code>      {% for owner in owners %}\n        {{ owner.full_name}}\n        {{ owner.email}}\n        {{ owner.position}}\n        {{ owner.number}}\n      {% endfor %}\n</code></pre>"},{"location":"custom-report/docx/retest/","title":"Context Variable for Project Retests","text":"<p>The <code>totalretest</code> variable gives access to the retests associated with a project. It allows you to display details of a project retest, including start and end dates, owners, and status. </p> <ul> <li>Usage Example:   You can loop through <code>totalretest</code> to display the retests for a project. However, it is possible to conditionally display the retests based on the <code>Report_type</code>, e.g., showing retests only when the report type is \"Re-Audit\".</li> </ul> Python<pre><code>  Project Retests:\n\n      {% for retest in totalretest %}\n          {{ retest.startdate }}  {{ retest.enddate }} | Status: {{ retest.status }}\n\n                  {% for owner in retest.owners %}\n                      {{ owner }}\n                  {% endfor %}\n\n      {% endfor %}\n</code></pre> <p>Note</p> <p>The <code>{{ owner }}</code> will only show the full_name of the owner, as of now its limited to full name only.</p> <p>It is possible to conditionally display the retests based on the <code>Report_type</code>, e.g., showing retests only when the report type is \"Re-Audit\".</p> HTML<pre><code>{% if Report_type == 'Re-Audit' %}\n  Project Retests:\n\n      {% for retest in totalretest %}\n          {{ retest.startdate }} - {{ retest.enddate }} | Status: {{ retest.status }}\n\n                {% for owner in retest.owners %}\n                      {{ owner }}\n                  {% endfor %}\n\n      {% endfor %}\n\n{% endif %}\n</code></pre>"},{"location":"custom-report/docx/scope/","title":"Context Variable for Project Scope","text":"<p>The <code>projectscope</code> variable gives access to the scope of a project. It allows you to retrieve and display details of the project's scope, including any specific tasks, requirements, or exceptions related to the project. You can loop through this context variable to show the scope items associated with a project.</p> <ul> <li>Usage Example:</li> </ul> Python<pre><code>Project Scope:\n\n    {% for scope in projectscope %}\n        {{ scope.scope }}  {{ scope.description }}\n    {% endfor %}\n&lt;/ul&gt;\n</code></pre>"},{"location":"custom-report/docx/vulnerability/","title":"Vulnerability","text":""},{"location":"custom-report/docx/vulnerability/#vulnerability-and-instance-model-variables-for-template-customization","title":"Vulnerability and Instance Model Variables for Template Customization","text":"<p>In APTRS, the <code>Vulnerability</code> and <code>Vulnerableinstance</code> models are used to manage and track vulnerabilities and their instances across various projects. APTRS provide <code>{{vulnerabilities}}</code> tag with list of all vulnerabilities and its instances. Below is an overview of the variables available for use in templates when working with these models.</p>"},{"location":"custom-report/docx/vulnerability/#available-variables-for-vulnerability-model","title":"Available Variables for Vulnerability Model","text":"<ol> <li> <p><code>vulnerability.vulnerabilityname</code> </p> <ul> <li>The name of the vulnerability (e.g., \"SQL Injection\").  </li> <li>Example usage: Python<pre><code>{% for vulnerability in vulnerabilities %}\nVulnerability Name: {{ vulnerability.vulnerabilityname }}\n{% endfor %}\n</code></pre></li> </ul> </li> <li> <p><code>vulnerability.vulnerabilityseverity</code> </p> <ul> <li>The severity of the vulnerability (e.g., \"High\", \"Medium\").  </li> <li>Example usage: Python<pre><code>{% for vulnerability in vulnerabilities %}\nSeverity: {{ vulnerability.vulnerabilityseverity }}\n{% endfor %}\n</code></pre></li> </ul> </li> <li> <p><code>vulnerability.cvssscore</code> </p> <ul> <li>The CVSS score associated with the vulnerability.  </li> <li>Example usage: Python<pre><code>{% for vulnerability in vulnerabilities %}\nCVSS Score: {{ vulnerability.cvssscore }}\n{% endfor %}\n</code></pre></li> </ul> </li> <li> <p><code>vulnerability.cvssvector</code> </p> <ul> <li>The CVSS vector associated with the vulnerability.  </li> <li>Example usage: Python<pre><code>{% for vulnerability in vulnerabilities %}\nCVSS Vector: {{ vulnerability.cvssvector }}\n{% endfor %}\n</code></pre></li> </ul> </li> <li> <p><code>vulnerability.status</code> </p> <ul> <li>The status of the vulnerability, based on <code>STATUS_CHOICES</code> (e.g., Vulnerable, Confirm Fixed, Accepted Risk).  </li> <li>Example usage: Python<pre><code>{% for vulnerability in vulnerabilities %}\nStatus: {{ vulnerability.status }}\n{% endfor %}\n</code></pre></li> </ul> </li> <li> <p><code>vulnerability.vulnerabilitydescription</code> </p> <ul> <li>A description of the vulnerability.  </li> <li>Example usage: Python<pre><code>{% for vulnerability in vulnerabilities %}\nDescription: {{p vulnerability.vulnerabilitydescription }}\n{% endfor %}\n</code></pre></li> <li>It uses CKeditor HTML data, its converted into the docx format from HTML, hence its required to use <code>p</code> at the start of the tag.</li> </ul> </li> <li> <p><code>vulnerability.POC</code> </p> <ul> <li>The proof of concept (POC) for the vulnerability.  </li> <li>Example usage: Python<pre><code>{% for vulnerability in vulnerabilities %}\nPOC: {{p vulnerability.POC }}\n{% endfor %}\n</code></pre></li> <li>It uses CKeditor HTML data, its converted into the docx format from HTML, hence its required to use <code>p</code> at the start of the tag.</li> </ul> </li> <li> <p><code>vulnerability.vulnerabilitysolution</code> </p> <ul> <li>The recommended solution for the vulnerability.  </li> <li>Example usage: Python<pre><code>{% for vulnerability in vulnerabilities %}\nSolution: {{p vulnerability.vulnerabilitysolution }}\n{% endfor %}\n</code></pre></li> <li>It uses CKeditor HTML data, its converted into the docx format from HTML, hence its required to use <code>p</code> at the start of the tag.</li> </ul> </li> <li> <p><code>vulnerability.vulnerabilityreferlnk</code> </p> <ul> <li>A reference link related to the vulnerability.  </li> <li>Example usage: Python<pre><code>{% for vulnerability in vulnerabilities %}\nReference Link: {{p vulnerability.vulnerabilityreferlnk }}\n{% endfor %}\n</code></pre></li> <li>It uses CKeditor HTML data, its converted into the docx format from HTML, hence its required to use <code>p</code> at the start of the tag.</li> </ul> </li> <li> <p><code>vulnerability.created</code> </p> <ul> <li>The timestamp when the vulnerability was created.  </li> <li>Example usage: Python<pre><code>{% for vulnerability in vulnerabilities %}\nCreated: {{ vulnerability.created }}\n{% endfor %}\n</code></pre></li> </ul> </li> <li> <p><code>vulnerability.created_by</code> </p> <ul> <li>The user who created the vulnerability.  </li> <li>Example usage: Python<pre><code>{% for vulnerability in vulnerabilities %}\nCreated By: {{ vulnerability.created_by.username }}\n{{ vulnerability.created_by.full_name }}\n{% endfor %}\n</code></pre></li> <li>Similar to project owner, you can use other filed as well  like email, number or postion etc.</li> </ul> </li> <li> <p><code>vulnerability.last_updated_by</code> </p> <ul> <li>The user who last updated the vulnerability.  </li> <li>Example usage: Python<pre><code>{% for vulnerability in vulnerabilities %}\nLast Updated By: {{ vulnerability.last_updated_by.username }}\n{{ vulnerability.last_updated_by.full_name }}\n{% endfor %}\n</code></pre></li> </ul> </li> <li> <p><code>vulnerability.instances_data</code> </p> <ul> <li>Access all instaces of the vulnerability.  </li> <li>Example usage: Python<pre><code>{% for vulnerability in vulnerabilities %}\n\n      {for instance in vulnerability.instances_data %}\n      ## This give all instances for vulnerabiltiy in current loop\n\n        URL: {{ instance.URL }}\n        Parameter: {{ instance.Parameter }}\n        Parameter: {{ instance.Status }}\n\n      {% endfor %}\n\n{% endfor %}\n</code></pre></li> </ul> </li> <li> <p><code>vulnerability.cwe</code> </p> <ul> <li>Access all CWE of the vulnerability.  </li> <li>Example usage: Python<pre><code>      {% if vulnerability.cwe %}\n\n      {% for cwe_item in vulnerability.cwe %}\n      {{ cwe_item }}\n  {%- endfor %} \n  {% endif %} \n</code></pre></li> </ul> </li> </ol>"},{"location":"custom-report/docx/vulnerability/#example","title":"Example","text":"Python<pre><code>{% for vulnerability in vulnerabilities %}\n\n    Vulnerability Name: {{ vulnerability.vulnerabilityname }}\n\n    Severity: {{ vulnerability.vulnerabilityseverity }}\n\n    CVSS Score: {{ vulnerability.cvssscore }}\n\n    CVSS Vector: {{ vulnerability.cvssvector }}\n\n    Status: {{ vulnerability.status }}\n\n    Description:  \n    {{p vulnerability.vulnerabilitydescription }}\n\n    POC:  \n    {{p vulnerability.POC }}\n\n    Solution:  \n    {{p vulnerability.vulnerabilitysolution }}\n\n    Reference Link:  \n    {{p vulnerability.vulnerabilityreferlnk }}\n\n    Created On: {{ vulnerability.created }}\n\n    Created By:  \n    - Username: {{ vulnerability.created_by.username }}  \n    - Full Name: {{ vulnerability.created_by.full_name }}\n    - Email: {{ vulnerability.created_by.email }}\n    - Number: {{ vulnerability.created_by.number }}\n\n    Last Updated By:  \n    - Username: {{ vulnerability.last_updated_by.username }}\n    - Full Name: {{ vulnerability.last_updated_by.full_name }}\n    - Email: {{ vulnerability.last_updated_by.email }}\n    - Number: {{ vulnerability.last_updated_by.number }}\n\n    Instances\n\n      {for instance in vulnerability.instances_data %}\n\n        URL: {{ instance.URL }}\n        Parameter: {{ instance.Parameter }}\n        Parameter: {{ instance.Status }}\n\n      {% endfor %}\n\n{% endfor %}\n</code></pre>"},{"location":"custom-report/docx/vulnerability/#reference","title":"Reference","text":"<p>For reference you can see <code>vulnerabilities</code> tag as below json object</p> JSON<pre><code>vulnerabilities = [\n    {\n        \"project\": \"Project Name or ID\",  \n        \"vulnerabilityname\": \"SQL Injection in Login Page\",\n        \"vulnerabilityseverity\": \"High\",\n        \"cvssscore\": 9.8,\n        \"cvssvector\": \"AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H\",\n        \"status\": \"Vulnerable\",\n        \"vulnerabilitydescription\": \"Converted DOCX content for vulnerability 1 description\",\n        \"POC\": \"Converted DOCX content for vulnerability 1 proof of concept\",\n        \"created\": \"2024-11-20T10:15:30Z\",\n        \"vulnerabilitysolution\": \"Converted DOCX content for vulnerability 1 solution\",\n        \"vulnerabilityreferlnk\": \"Converted DOCX content for vulnerability 1 reference link\",\n        \"created_by\": \"User1\",\n        \"last_updated_by\": \"User2\",\n        \"instances_data\": [\n            {\n                \"URL\": \"https://example.com/vulnerable-endpoint-1\",\n                \"Parameter\": \"user_id\",\n                \"Status\": \"Open\"\n            },\n            {\n                \"URL\": \"https://example.com/another-endpoint-1\",\n                \"Parameter\": \"\",\n                \"Status\": \"Closed\"\n            }\n        ]\n    },\n    {\n        \"project\": \"Project Name or ID\",  \n        \"vulnerabilityname\": \"Cross-Site Scripting in Search Page\",\n        \"vulnerabilityseverity\": \"Medium\",\n        \"cvssscore\": 6.5,\n        \"cvssvector\": \"AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N\",\n        \"status\": \"Vulnerable\",\n        \"vulnerabilitydescription\": \"Converted DOCX content for vulnerability 2 description\",\n        \"POC\": \"Converted DOCX content for vulnerability 2 proof of concept\",\n        \"created\": \"2024-11-19T14:10:45Z\",\n        \"vulnerabilitysolution\": \"Converted DOCX content for vulnerability 2 solution\",\n        \"vulnerabilityreferlnk\": \"Converted DOCX content for vulnerability 2 reference link\",\n        \"created_by\": \"User3\",\n        \"last_updated_by\": \"User4\",\n        \"instances_data\": [\n            {\n                \"URL\": \"https://example.com/vulnerable-endpoint-2\",\n                \"Parameter\": \"session_id\",\n                \"Status\": \"Open\"\n            },\n            {\n                \"URL\": \"https://example.com/another-endpoint-2\",\n                \"Parameter\": \"order_id\",\n                \"Status\": \"Closed\"\n            }\n        ]\n    }\n]\n</code></pre>"},{"location":"custom-report/pdf/company-user/","title":"Context Variables for Company and Users","text":""},{"location":"custom-report/pdf/company-user/#1-internal-company-name","title":"1. Internal Company Name","text":"<ul> <li> <p>Description: </p> <p>This variable will provide the name of the internal company (your own company) that is linked to the APTRS. It fetches the company name from the <code>Company</code> model where the <code>internal</code> field is set to <code>True</code>.</p> </li> <li> <p>Usage Example:</p> HTML<pre><code>&lt;p&gt;Company: {{ mycompany }}&lt;/p&gt;\n</code></pre> </li> </ul>"},{"location":"custom-report/pdf/company-user/#2-project-manager-users","title":"2. Project Manager Users","text":"<ul> <li> <p>Description:</p> <p>This variable gives access to all the internal users who are part of the \"Project Manager\" group. You can loop through this list to display details like the name of the project managers working on the project.</p> </li> <li> <p>Usage Example:</p> HTML<pre><code>&lt;h3&gt;Project Managers:&lt;/h3&gt;\n    &lt;ul&gt;\n        {% for user in projectmanagers %}\n            &lt;li&gt;{{ user.full_name }} - {{ user.position }}&lt;/li&gt;\n        {% endfor %}\n    &lt;/ul&gt;\n</code></pre> </li> </ul>"},{"location":"custom-report/pdf/company-user/#3-customer-company-users","title":"3. Customer Company Users","text":"<ul> <li> <p>Description:</p> <p>This variable provides access to the users who belong to the customer\u2019s company for the project. It retrieves the list of active users associated with the project\u2019s customer company.</p> </li> <li> <p>Usage Example:</p> HTML<pre><code>    &lt;h3&gt;Customer Users:&lt;/h3&gt;\n    &lt;ul&gt;\n        {% for user in customeruser %}\n            &lt;li&gt;{{ user.full_name }} - {{ user.position }}&lt;/li&gt;\n        {% endfor %}\n    &lt;/ul&gt;\n</code></pre> </li> </ul>"},{"location":"custom-report/pdf/context-variable/","title":"Context Variable","text":"<p>This document describes how to customize the HTML templates used to generate PDF reports using the <code>GetHTML</code> function in your Django application. Below are the available context variables that can be used in the HTML templates and their respective details.</p>"},{"location":"custom-report/pdf/context-variable/#context-variables","title":"Context Variables","text":"<p>The following context variables are passed to the HTML template (<code>report.html</code>) during PDF generation. Users can use these variables to dynamically customize the content of the PDF report.</p> Variable Name Description <code>project</code> The project object for which the report is being generated. Contains all project details. <code>vuln</code> Queryset of vulnerabilities for the project, ordered by CVSS score (higher to lower). <code>instances</code> Queryset of all vulnerable instances associated with the project. <code>projectmanagers</code> Queryset of users in the \"Project Manager\" group. <code>customeruser</code> Queryset of customer users associated with the project's customer company. <code>mycomany</code> The name of the internal (your company) company. <code>projectscope</code> Queryset of all project scopes for the project. <code>totalretest</code> Queryset of all retests for the project. <code>totalvulnerability</code> Total count of vulnerabilities for the project. <code>ciritcal</code> Count of vulnerabilities with severity \"Critical\". <code>high</code> Count of vulnerabilities with severity \"High\". <code>medium</code> Count of vulnerabilities with severity \"Medium\". <code>low</code> Count of vulnerabilities with severity \"Low\". <code>info</code> Count of vulnerabilities with severity \"Informational\" or \"None\". <code>standard</code> The standard or methodology being used for the report. <code>Report_type</code> The type of report being generated (e.g., Audit, Re-Audit). <code>pie_chart</code> Rendered pie chart data showing the vulnerability distribution by severity."},{"location":"custom-report/pdf/context-variable/#how-to-customize-templates","title":"How to Customize Templates","text":"<ol> <li> <p>Locate the HTML Template: </p> <ul> <li>The report template is located at <code>templates/*</code>. You can modify this file or create a new one for different report types.</li> </ul> </li> <li> <p>Use Context Variables: </p> <ul> <li>Insert the context variables into the template using Django's template syntax. For example:     HTML<pre><code>&lt;h1&gt;Vulnerability Report for {{ project.name }}&lt;/h1&gt;\n&lt;p&gt;Total Vulnerabilities: {{ totalvulnerability }}&lt;/p&gt;\n&lt;p&gt;Critical Issues: {{ ciritcal }}&lt;/p&gt;\n&lt;p&gt;High Severity Issues: {{ high }}&lt;/p&gt;\n</code></pre></li> </ul> </li> <li> <p>Dynamic Content:</p> <ul> <li>Use loops and conditionals to dynamically render data. For example:     HTML<pre><code>&lt;ul&gt;\n{% for vuln in vuln %}\n    &lt;li&gt;{{ vuln.vulnerabilityname }} - Severity: {{ vuln.vulnerabilityseverity }}&lt;/li&gt;\n{% endfor %}\n&lt;/ul&gt;\n</code></pre></li> </ul> </li> <li> <p>Styling and Charts:</p> <ul> <li>Use <code>{{ pie_chart|safe }}</code> to embed the rendered pie chart in the HTML. Ensure that the <code>safe</code> filter is applied to include raw HTML safely.</li> </ul> </li> </ol>"},{"location":"custom-report/pdf/context-variable/#example-template-usage","title":"Example Template Usage","text":"<p>Here\u2019s a sample section of the <code>report.html</code> template:</p> HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;{{ project.name }} Vulnerability Report&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;{{ mycomany }} - Vulnerability Report&lt;/h1&gt;\n    &lt;h2&gt;Project: {{ project.name }}&lt;/h2&gt;\n    &lt;p&gt;Total Vulnerabilities: {{ totalvulnerability }}&lt;/p&gt;\n    &lt;p&gt;Critical Issues: {{ ciritcal }}&lt;/p&gt;\n    &lt;p&gt;High Severity Issues: {{ high }}&lt;/p&gt;\n    &lt;p&gt;Medium Severity Issues: {{ medium }}&lt;/p&gt;\n    &lt;p&gt;Low Severity Issues: {{ low }}&lt;/p&gt;\n    &lt;p&gt;Informational Issues: {{ info }}&lt;/p&gt;\n\n    &lt;h3&gt;Vulnerability Breakdown&lt;/h3&gt;\n    {{ pie_chart|safe }}\n\n    &lt;h3&gt;Vulnerabilities&lt;/h3&gt;\n    &lt;ul&gt;\n        {% for v in vuln %}\n            &lt;li&gt;{{ v.vulnerabilityname }} - Severity: {{ v.vulnerabilityseverity }}&lt;/li&gt;\n        {% endfor %}\n    &lt;/ul&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"custom-report/pdf/other/","title":"Context Variables for Vulnerabilities and Report Data","text":""},{"location":"custom-report/pdf/other/#1-total-vulnerabilities","title":"1. Total Vulnerabilities","text":"<ul> <li>Description:   Provides the total count of vulnerabilities associated with a project.</li> <li>Usage Example:   You can display the total number of vulnerabilities for the project.</li> </ul> HTML<pre><code>&lt;p&gt;Total Vulnerabilities: {{ totalvulnerability }}&lt;/p&gt;\n</code></pre>"},{"location":"custom-report/pdf/other/#2-severity-count","title":"2. Severity Count","text":"<ul> <li>Description:   Shows the count of vulnerabilities that have a severity of Critical or High, Medium, Low, None.</li> <li>Usage Example:   You can display the severity count.</li> </ul> HTML<pre><code>  &lt;p&gt;Critical Vulnerabilities: {{ critical }}&lt;/p&gt;\n  &lt;p&gt;High Vulnerabilities: {{ high }}&lt;/p&gt;\n  &lt;p&gt;Medium Vulnerabilities: {{ medium }}&lt;/p&gt;\n  &lt;p&gt;Low Vulnerabilities: {{ low }}&lt;/p&gt;\n  &lt;p&gt;Informational Vulnerabilities: {{ info }}&lt;/p&gt;\n</code></pre>"},{"location":"custom-report/pdf/other/#3-report-standard","title":"3. Report Standard","text":"<ul> <li>Description:   The standard or methodology being used for generating the report (e.g., OWASP, NIST). It will be in the list format, you can use below example to get in a text separated by comma.</li> <li>Usage Example:   Display the methodology or standard used in the vulnerability report.</li> </ul> HTML<pre><code>  &lt;p&gt;Report Standard: {{ standard|join:\", \" }}&lt;/p&gt;\n</code></pre>"},{"location":"custom-report/pdf/other/#4-report-type","title":"4. Report Type","text":"<ul> <li>Description:   Specifies the type of report being generated. This can include types like \"Audit\" or \"Re-Audit\".</li> <li>Usage Example:   Show the type of the report (Audit or Re-Audit).</li> </ul> HTML<pre><code>  &lt;p&gt;Report Type: {{ Report_type }}&lt;/p&gt;\n</code></pre>"},{"location":"custom-report/pdf/other/#5-chart-image","title":"5. Chart Image","text":"<ul> <li>Description:   This variable holds the rendered data for a pie chart showing the distribution of vulnerabilities by severity.</li> <li>Usage Example:   Use this to display a pie chart visualizing vulnerability severity distribution.</li> </ul> HTML<pre><code>  &lt;div&gt;{{ pie_chart|safe }}&lt;/div&gt;\n</code></pre>"},{"location":"custom-report/pdf/pdf/","title":"Customized PDF Report Documentation","text":"<p>APTRS uses the WeasyPrint library to generate PDF reports from HTML and CSS. The Django template engine dynamically passes data to the HTML template using context variables. </p>"},{"location":"custom-report/pdf/pdf/#how-it-works","title":"How It Works","text":"<p>The system is designed so you don\u2019t need to edit the Django code that handles report generation unless you are familiar with Django and Python. The recommended approach is to customize the layout and styling by modifying the HTML and CSS files provided with the project.</p>"},{"location":"custom-report/pdf/pdf/#file-structure-for-customization","title":"File Structure for Customization","text":"<p>Within the project root directory, there is a subdirectory named <code>APTRS</code>. This contains the following important folders for report customization:</p> <ol> <li> <p>Static Folder:  </p> <ul> <li>Located inside the <code>APTRS</code> directory.  </li> <li>Contains a <code>CSS</code> subfolder where all CSS files for the report are stored.  </li> <li>Includes predefined styles that you can customize to adjust the appearance of the report.</li> </ul> </li> <li> <p>Templates Folder:  </p> <ul> <li>Located in the same directory as the <code>static</code> folder.  </li> <li>Contains all the HTML templates used for generating reports.  </li> <li>Templates are modular, with the main report layout in <code>report.html</code> and additional reusable components loaded using Django's <code>{% include %}</code> tag.</li> </ul> </li> </ol>"},{"location":"custom-report/pdf/pdf/#key-files-for-customization","title":"Key Files for Customization","text":"<ol> <li> <p><code>report.html</code>:</p> <ul> <li>The main HTML file for the report.  </li> <li>Includes the overall structure, head tags, and references to CSS files.  </li> <li>Dynamically includes other HTML components for better modularity.</li> </ul> </li> <li> <p><code>report-page.css</code>:</p> <ul> <li>The primary CSS file applied to all report pages.  </li> <li>Handles global styles such as font loading, page numbering, table styles, and default styles for HTML tags.  </li> <li>Defines general formatting applied across the entire report.</li> </ul> </li> <li> <p>Component Files:</p> <ul> <li>Each HTML file has a corresponding CSS file for specific styles.</li> <li>For example, styles specific to an HTML section like <code>vulnerability.html</code> will be defined in <code>vulnerability.css</code>.</li> <li>This structure ensures easy identification and modification of styles tied to specific sections.</li> </ul> </li> </ol>"},{"location":"custom-report/pdf/pdf/#fonts","title":"Fonts","text":"<p>The project uses the Fira Sans font by default, stored in the <code>static/fonts</code> folder. You can:</p> <ul> <li>Add new fonts to the <code>fonts</code> folder.</li> <li>Update the CSS in the <code>report-page.css</code> file to use your fonts.</li> </ul>"},{"location":"custom-report/pdf/pdf/#customization-tips","title":"Customization Tips","text":"<ul> <li>Modify HTML files to change content layout, add new sections, or reorder components.</li> <li>Edit CSS files to change colors, fonts, or styles for specific sections.</li> <li>Use the modular structure to quickly locate and modify styles for individual components.</li> <li>For global styles or formatting (e.g., page numbers, headers, footers), update <code>report-page.css</code>.</li> </ul>"},{"location":"custom-report/pdf/pdf/#important-notes","title":"Important Notes","text":"<ul> <li>Avoid editing the Django code unless necessary, as it handles the logic for passing variables and generating the PDF.</li> <li>All changes to the static files (CSS) or templates (HTML) will reflect in the next report generated.</li> </ul>"},{"location":"custom-report/pdf/project/","title":"Project","text":""},{"location":"custom-report/pdf/project/#project-model-variables-for-template-customization","title":"Project Model Variables for Template Customization","text":"<p>The <code>Project</code> model in APTRS contains the following fields that can be used as template variables in your custom report templates. These variables are passed as part of the context to the report HTML, allowing you to display or manipulate project-related data in your custom reports.</p>"},{"location":"custom-report/pdf/project/#available-variables-and-their-usage","title":"Available Variables and Their Usage","text":"<ol> <li> <p><code>project.name</code> </p> <ul> <li>Represents the name of the project.  </li> <li>Example usage in HTML: HTML<pre><code>&lt;h1&gt;Project Name: {{ project.name }}&lt;/h1&gt;\n</code></pre></li> </ul> </li> <li> <p><code>project.companyname</code> </p> <ul> <li>A foreign key to the <code>Company</code> model, representing the company associated (Customer Company) with the project.  </li> <li>Example usage: HTML<pre><code>&lt;p&gt;Company Name: {{ project.companyname.name }}&lt;/p&gt;\n</code></pre></li> </ul> </li> <li> <p><code>project.description</code> </p> <ul> <li>A detailed description of the project.  </li> <li>Example usage: HTML<pre><code>&lt;p&gt;Description: {{project.description|clean_html}}&lt;/p&gt;\n</code></pre></li> <li>It uses CKeditor HTML data, using <code>|clean_html</code> allow to render html data securely instead of as text.</li> </ul> </li> <li> <p><code>project.projecttype</code> </p> <ul> <li>Specifies the type of project.  </li> <li>Example usage: HTML<pre><code>&lt;p&gt;Project Type: {{ project.projecttype }}&lt;/p&gt;\n</code></pre></li> </ul> </li> <li> <p><code>project.startdate</code> </p> <ul> <li>The start date of the project.  </li> <li>Example usage: HTML<pre><code>&lt;p&gt;Start Date: {{ project.startdate }}&lt;/p&gt;\n</code></pre></li> <li>You can also modify the date format      HTML<pre><code>    &lt;p&gt;Start Date: {{project.startdate|date:\"d/m/Y\" }} &lt;/p&gt;\n</code></pre></li> </ul> </li> <li> <p><code>project.enddate</code> </p> <ul> <li>The end date of the project.  </li> <li>Example usage: HTML<pre><code>&lt;p&gt;End Date: {{ project.enddate }}&lt;/p&gt;\n</code></pre></li> <li>You can also modify the date format      HTML<pre><code>    &lt;p&gt;End Date: {{project.enddate|date:\"d/m/Y\" }} &lt;/p&gt;\n</code></pre></li> </ul> </li> <li> <p><code>project.testingtype</code> </p> <ul> <li>The type of testing performed for the project (e.g., White Box, Black Box).  </li> <li>Example usage: HTML<pre><code>&lt;p&gt;Testing Type: {{ project.testingtype }}&lt;/p&gt;\n</code></pre></li> </ul> </li> <li> <p><code>project.projectexception</code> </p> <ul> <li>Notes or exceptions for the project, if any.  </li> <li>Example usage: HTML<pre><code>&lt;p&gt;Exceptions: {{ project.projectexception|clean_html }}&lt;/p&gt;\n</code></pre></li> <li>It uses CKeditor HTML data, using <code>|clean_html</code> allow to render html data securely instead of as text.</li> <li>In most cases if you don't have exceptions and in your report you only this if exception is there you are also do it with conditions.   HTML<pre><code>{% if project.projectexception %}\n&lt;p&gt;Exceptions: {{ project.projectexception|clean_html }}&lt;/p&gt;\n{% endif %}\n</code></pre></li> </ul> </li> <li> <p><code>project.owner</code> </p> <ul> <li>A many-to-many relationship representing users associated as owners of the project.  </li> <li>To display all owners: HTML<pre><code>&lt;ul&gt;\n  {% for owner in project.owner.all %}\n    &lt;li&gt;{{ owner.username }}&lt;/li&gt;\n    &lt;li&gt;{{ owner.full_name }} &lt;/li&gt;\n    &lt;td&gt;{{ owner.email }} &lt;/li&gt;\n    &lt;li&gt;{{ owner.number }} &lt;/li&gt;\n    &lt;li&gt;{{ owner.position }} &lt;/li&gt;\n  {% endfor %}\n&lt;/ul&gt;\n</code></pre></li> </ul> </li> <li> <p><code>project.status</code> </p> <ul> <li>The current status of the project, based on <code>PROJECT_STATUS_CHOICES</code> (e.g., Upcoming, In Progress, Delay, Completed).  </li> <li>Example usage: HTML<pre><code>&lt;p&gt;Status: {{ project.status }}&lt;/p&gt;\n</code></pre></li> </ul> </li> </ol>"},{"location":"custom-report/pdf/retest/","title":"Context Variable for Project Retests","text":"<p>The <code>totalretest</code> variable gives access to the retests associated with a project. It allows you to display details of a project retest, including start and end dates, owners, and status. </p> <ul> <li>Usage Example:   You can loop through <code>totalretest</code> to display the retests for a project. However, it is possible to conditionally display the retests based on the <code>Report_type</code>, e.g., showing retests only when the report type is \"Re-Audit\".</li> </ul> HTML<pre><code>&lt;h3&gt;Project Retests:&lt;/h3&gt;\n  &lt;ul&gt;\n      {% for retest in totalretest %}\n          &lt;li&gt;{{ retest.startdate }} - {{ retest.enddate }} | Status: {{ retest.status }}\n\n              {% for owner in retest.owner.all %}\n                    {{ owner.full_name }}\n\n              {% endfor %}\n          &lt;/li&gt;\n      {% endfor %}\n  &lt;/ul&gt;\n</code></pre> <p>It is possible to conditionally display the retests based on the <code>Report_type</code>, e.g., showing retests only when the report type is \"Re-Audit\".</p> HTML<pre><code>{% if Report_type == 'Re-Audit' %}\n  &lt;h3&gt;Project Retests:&lt;/h3&gt;\n  &lt;ul&gt;\n      {% for retest in totalretest %}\n          &lt;li&gt;{{ retest.startdate }} - {{ retest.enddate }} | Status: {{ retest.status }}\n\n            {% for owner in retest.owner.all %}\n                    {{ owner.full_name }}\n\n              {% endfor %}\n          &lt;/li&gt;\n      {% endfor %}\n  &lt;/ul&gt;\n{% endif %}\n</code></pre>"},{"location":"custom-report/pdf/scope/","title":"Context Variable for Project Scope","text":"<p>The <code>projectscope</code> variable gives access to the scope of a project. It allows you to retrieve and display details of the project's scope, including any specific tasks, requirements, or exceptions related to the project. You can loop through this context variable to show the scope items associated with a project.</p> <ul> <li>Usage Example:</li> </ul> HTML<pre><code>&lt;h3&gt;Project Scope:&lt;/h3&gt;\n&lt;ul&gt;\n    {% for scope in projectscope %}\n        &lt;li&gt;{{ scope.scope }} - {{ scope.description }}&lt;/li&gt;\n    {% endfor %}\n&lt;/ul&gt;\n</code></pre>"},{"location":"custom-report/pdf/vulnerability/","title":"Vulnerability","text":""},{"location":"custom-report/pdf/vulnerability/#vulnerability-and-instance-model-variables-for-template-customization","title":"Vulnerability and Instance Model Variables for Template Customization","text":"<p>In APTRS, the <code>Vulnerability</code> and <code>Vulnerableinstance</code> models are used to manage and track vulnerabilities and their instances across various projects. Below is an overview of the variables available for use in templates when working with these models.</p>"},{"location":"custom-report/pdf/vulnerability/#available-variables-for-vulnerability-model","title":"Available Variables for Vulnerability Model","text":"<ol> <li> <p><code>vulnerability.vulnerabilityname</code> </p> <ul> <li>The name of the vulnerability (e.g., \"SQL Injection\").  </li> <li>Example usage: HTML<pre><code>{% for vulnerability in vuln %}\n&lt;p&gt;Vulnerability Name: {{ vulnerability.vulnerabilityname }}&lt;/p&gt;\n{% endfor %}\n</code></pre></li> </ul> </li> <li> <p><code>vulnerability.vulnerabilityseverity</code> </p> <ul> <li>The severity of the vulnerability (e.g., \"High\", \"Medium\").  </li> <li>Example usage: HTML<pre><code>{% for vulnerability in vuln %}\n&lt;p&gt;Severity: {{ vulnerability.vulnerabilityseverity }}&lt;/p&gt;\n{% endfor %}\n</code></pre></li> </ul> </li> <li> <p><code>vulnerability.cvssscore</code> </p> <ul> <li>The CVSS score associated with the vulnerability.  </li> <li>Example usage: HTML<pre><code>{% for vulnerability in vuln %}\n&lt;p&gt;CVSS Score: {{ vulnerability.cvssscore }}&lt;/p&gt;\n{% endfor %}\n</code></pre></li> </ul> </li> <li> <p><code>vulnerability.cvssvector</code> </p> <ul> <li>The CVSS vector associated with the vulnerability.  </li> <li>Example usage: HTML<pre><code>{% for vulnerability in vuln %}\n&lt;p&gt;CVSS Vector: {{ vulnerability.cvssvector }}&lt;/p&gt;\n{% endfor %}\n</code></pre></li> </ul> </li> <li> <p><code>vulnerability.status</code> </p> <ul> <li>The status of the vulnerability, based on <code>STATUS_CHOICES</code> (e.g., Vulnerable, Confirm Fixed, Accepted Risk).  </li> <li>Example usage: HTML<pre><code>{% for vulnerability in vuln %}\n&lt;p&gt;Status: {{ vulnerability.status }}&lt;/p&gt;\n{% endfor %}\n</code></pre></li> </ul> </li> <li> <p><code>vulnerability.vulnerabilitydescription</code> </p> <ul> <li>A description of the vulnerability.  </li> <li>Example usage: HTML<pre><code>{% for vulnerability in vuln %}\n&lt;p&gt;Description: {{ vulnerability.vulnerabilitydescription|clean_html }}&lt;/p&gt;\n{% endfor %}\n</code></pre></li> </ul> </li> <li> <p><code>vulnerability.POC</code> </p> <ul> <li>The proof of concept (POC) for the vulnerability.  </li> <li>Example usage: HTML<pre><code>{% for vulnerability in vuln %}\n&lt;p&gt;POC: {{ vulnerability.POC|clean_html }}&lt;/p&gt;\n{% endfor %}\n</code></pre></li> </ul> </li> <li> <p><code>vulnerability.vulnerabilitysolution</code> </p> <ul> <li>The recommended solution for the vulnerability.  </li> <li>Example usage: HTML<pre><code>{% for vulnerability in vuln %}\n&lt;p&gt;Solution: {{ vulnerability.vulnerabilitysolution|clean_html }}&lt;/p&gt;\n{% endfor %}\n</code></pre></li> </ul> </li> <li> <p><code>vulnerability.vulnerabilityreferlnk</code> </p> <ul> <li>A reference link related to the vulnerability.  </li> <li>Example usage: HTML<pre><code>{% for vulnerability in vuln %}\n&lt;p&gt;Reference Link: {{ vulnerability.vulnerabilityreferlnk|clean_html }}&lt;/p&gt;\n{% endfor %}\n</code></pre></li> </ul> </li> <li> <p><code>vulnerability.created</code> </p> <ul> <li>The timestamp when the vulnerability was created.  </li> <li>Example usage: HTML<pre><code>{% for vulnerability in vuln %}\n&lt;p&gt;Created: {{ vulnerability.created }}&lt;/p&gt;\n{% endfor %}\n</code></pre></li> </ul> </li> <li> <p><code>vulnerability.created_by</code> </p> <ul> <li>The user who created the vulnerability.  </li> <li>Example usage: HTML<pre><code>{% for vulnerability in vuln %}\n&lt;p&gt;Created By: {{ vulnerability.created_by.username }}&lt;/p&gt;\n{{ vulnerability.created_by.full_name }}&lt;/p&gt;\n{% endfor %}\n</code></pre></li> <li>Similar to project owner, you can use other filed as well  like email, number or postion etc.</li> </ul> </li> <li> <p><code>vulnerability.last_updated_by</code> </p> <ul> <li>The user who last updated the vulnerability.  </li> <li>Example usage: HTML<pre><code>{% for vulnerability in vuln %}\n&lt;p&gt;Last Updated By: {{ vulnerability.last_updated_by.username }}&lt;/p&gt;\n{% endfor %}\n</code></pre></li> </ul> </li> <li><code>vulnerability.cwe</code> <ul> <li>List of CWE.  </li> <li>Example usage: HTML<pre><code>{% if vulnerability.cwe  %}\n    &lt;h3&gt;CWE&lt;/h3&gt;\n\n        {% for cwe_item in vulnerability.cwe %}\n            &lt;li&gt;{{ cwe_item }}&lt;/li&gt;\n        {% endfor %}\n    &lt;/ul&gt;\n    {% endif %}\n</code></pre></li> </ul> </li> </ol>"},{"location":"custom-report/pdf/vulnerability/#available-variables-for-vulnerableinstance-model","title":"Available Variables for Vulnerableinstance Model","text":"<ol> <li><code>instance.vulnerabilityid</code> </li> <li>The <code>Vulnerability</code> object associated with the instance.  </li> <li> <p>Example usage: HTML<pre><code>{% for instance in instances %}\n&lt;p&gt;Vulnerability Name: {{ instance.vulnerabilityid.vulnerabilityname }}&lt;/p&gt;\n{% endfor %}\n</code></pre></p> </li> <li> <p><code>instance.project</code> </p> </li> <li>The project associated with the vulnerable instance.  </li> <li> <p>Example usage: HTML<pre><code>{% for instance in instances %}\n&lt;p&gt;Project: {{ instance.project.name }}&lt;/p&gt;\n{% endfor %}\n</code></pre></p> </li> <li> <p><code>instance.URL</code> </p> </li> <li>The URL of the vulnerable instance.  </li> <li> <p>Example usage: HTML<pre><code>{% for instance in instances %}\n&lt;p&gt;URL: {{ instance.URL }}&lt;/p&gt;\n{% endfor %}\n</code></pre></p> </li> <li> <p><code>instance.Parameter</code> </p> </li> <li>The parameter of the vulnerable instance.  </li> <li> <p>Example usage: HTML<pre><code>{% for instance in instances %}\n&lt;p&gt;Parameter: {{ instance.Parameter }}&lt;/p&gt;\n{% endfor %}\n</code></pre></p> </li> <li> <p><code>instance.status</code> </p> </li> <li>The status of the vulnerable instance, based on <code>STATUS_CHOICES</code> (e.g., Vulnerable, Confirm Fixed, Accepted Risk).  </li> <li>Example usage: HTML<pre><code>{% for instance in instances %}\n&lt;p&gt;Status: {{ instance.status }}&lt;/p&gt;\n{% endfor %}\n</code></pre></li> </ol>"},{"location":"custom-report/pdf/vulnerability/#displaying-vulnerable-instances-for-a-specific-vulnerability-in-a-template","title":"Displaying Vulnerable Instances for a Specific Vulnerability in a Template","text":"<p>The instances query set or list does not associate with the vulnerability name, instances variable contain all instances for the project, In most cases we need all instances for a vulnerability. We can do that as well, you can check in the original <code>vulnerabilities.html</code> in the template or you can use this: </p> <p>To display the instances for a specific vulnerability within a loop for vulnerabilities, you can use the following approach:</p> HTML<pre><code>{% for vulnerability in vuln %}\n\n &lt;p&gt;Vulnerability Name: {{ vulnerability.vulnerabilityname }}&lt;/p&gt;\n\n&lt;p&gt;{{ vulnerability.vulnerabilitysolution|clean_html }}&lt;/p&gt;\n\n&lt;p&gt;{{ vulnerability.vulnerabilityreferlnk|clean_html }}&lt;/p&gt;\n\n&lt;p&gt;POC: {{ vulnerability.POC|clean_html }}&lt;/p&gt;\n\n  &lt;p&gt;Description: {{ vulnerability.vulnerabilitydescription|clean_html }}&lt;/p&gt;\n\n   &lt;p&gt;Status: {{ vulnerability.status }}&lt;/p&gt;\n\n   &lt;p&gt;CVSS Vector: {{ vulnerability.cvssvector }}&lt;/p&gt;\n\n   &lt;p&gt;Severity: {{ vulnerability.vulnerabilityseverity }}&lt;/p&gt;\n\n  {% for instance in instances %}\n\n    {% if instance.vulnerabilityid.id == vulnerability.id %}\n      &lt;tr&gt;\n        &lt;td&gt;{{ instance.URL }}&lt;/td&gt;\n        &lt;td&gt;{{ instance.Parameter }}&lt;/td&gt;\n        &lt;td&gt;{{ instance.status }}&lt;/td&gt;\n      &lt;/tr&gt;\n    {% endif %}\n\n  {% endfor %}\n\n{% endfor %}\n</code></pre>"},{"location":"customer/","title":"Customer Portal","text":"<p>Starting from version 2.0, APTRS provides customers with a dedicated login portal to access their project information and security reports.</p> <p></p>"},{"location":"customer/#dashboard-features","title":"Dashboard Features","text":"<p>The customer dashboard provides a comprehensive overview of security assessment status:</p> <ul> <li>Project Status Cards: View counts for active, upcoming, delayed, and on-hold projects</li> <li>Security Metrics: See overall security score and remediation progress</li> <li>Finding Trends: Track vulnerability trends over the past 4 months</li> <li>Latest Findings: Review the 10 most recent security findings</li> <li>Active Projects &amp; Retests: Monitor ongoing assessment activities</li> </ul>"},{"location":"customer/#project-views","title":"Project Views","text":"<p>Customers can view their projects organized by different statuses for easy tracking and management.</p>"},{"location":"customer/#project-status-overview","title":"Project Status Overview","text":"<p>The Projects section provides a consolidated view of all projects with filtering options:</p> <ul> <li>Active Projects: Currently in progress assessments</li> <li>Upcoming Projects: Scheduled future assessments</li> <li>Delayed Projects: Assessments behind schedule</li> <li>On-Hold Projects: Temporarily paused assessments</li> <li>Completed Projects: Finished assessments</li> </ul>"},{"location":"customer/#project-details-view","title":"Project Details View","text":"<p>When customers select a specific project, they can access a comprehensive project details page with the following features:</p>"},{"location":"customer/#project-information","title":"Project Information","text":"<ul> <li>Project Header: Displays the project name and \"Back to Projects\" navigation</li> <li>Project Status: Visual indicator showing project status (Completed, Active, etc.)</li> <li>Testing Type: Shows methodology used (White Box, Black Box, etc.)</li> <li>Project Timeline: Displays project start and end dates</li> </ul>"},{"location":"customer/#navigation-tabs","title":"Navigation Tabs","text":"<p>The project details page includes several tabs for easy navigation: - Overview: General project information and summary - Vulnerabilities: List of all discovered security findings - Scope: The assessment targets and boundaries - Retests: Remediation verification status (when applicable) - Reports: Access to downloadable reports</p>"},{"location":"customer/#project-summary-section","title":"Project Summary Section","text":"<p>The Summary section provides: - Description: Detailed information about the project's purpose and testing methodology - Project Exceptions: Any special considerations or exclusions - Project Type: The type of security assessment conducted - Standards: Applied security standards (e.g., OWASP TOP 10 2021, 2017)</p>"},{"location":"customer/#security-assessment-overview","title":"Security Assessment Overview","text":"<p>Displays a visual summary of security findings by severity: - Color-coded counters for Critical, High, Medium, Low, and Informational findings - Quick visual reference of the project's overall security posture</p>"},{"location":"customer/#project-team","title":"Project Team","text":"<p>Lists security professionals assigned to the project.</p>"},{"location":"customer/#timeline","title":"Timeline","text":"<p>Shows key project dates: - Start Date - End Date</p>"},{"location":"customer/#recent-findings-table","title":"Recent Findings Table","text":"<p>Provides a detailed list of vulnerabilities with: - Finding Name: Title of the security vulnerability - Severity: Impact level (Critical, High, Medium, Low, Informational) - Status: Current state (Vulnerable, Confirm Fixed) - Discovery Date: When the vulnerability was identified</p>"},{"location":"customer/#vulnerability-details","title":"Vulnerability Details","text":"<p> Customers can click on individual vulnerabilities to view comprehensive details:</p> <ul> <li>Vulnerability Description: Detailed explanation of the security issue</li> <li>Instances: Where the vulnerability was found in the application</li> <li>Proof of Concept: Demonstration of how the vulnerability can be exploited</li> <li>Impact: Business and security consequences</li> <li>Remediation Steps: Recommended fixes with code examples when applicable</li> <li>References: Links to industry resources explaining the vulnerability</li> </ul> <p>Vulnerability Management</p> <p>While customers cannot modify vulnerability information, they can use the detailed findings to prioritize their remediation efforts and track progress through the retest process.</p>"},{"location":"customer/#past-projects-view","title":"Past Projects View","text":"<p>The Past Projects section allows customers to:</p> <ul> <li>View all completed security assessments in a centralized location</li> <li>See key project information at a glance:</li> <li>Project name</li> <li>Project dates (start and end)</li> <li>Project type (Web Application, Internal Network, etc.)</li> <li>Testing type (White Box, Black Box, etc.)</li> <li>Status (Completed)</li> <li>Access detailed project information via \"View details\" link</li> </ul>"},{"location":"customer/#sorting-and-filtering","title":"Sorting and Filtering","text":"<p>Customers have robust options to organize their past projects:</p> <ul> <li> <p>Filters: Click the \"Filters\" button to narrow down projects by:</p> <ul> <li>Date range</li> <li>Project type</li> <li>Testing methodology</li> <li>Custom filters</li> </ul> </li> <li> <p>Sort: Use the \"Sort\" button to order projects by:</p> <ul> <li>Date (newest/oldest first)</li> <li>Project name (A-Z/Z-A)</li> <li>Project type</li> <li>Completion status</li> </ul> </li> </ul> <p>These options make it easy to find specific past assessments when needed for reference, compliance purposes, or historical trend analysis.</p>"},{"location":"customer/#retest-information","title":"Retest Information","text":"<p>For projects that include retests, customers can:</p> <ul> <li>View the retest status aligned with the project status</li> <li>See planned retest dates and windows</li> <li>Track remediation progress</li> <li>Monitor findings that have been successfully fixed</li> <li>Review findings that still require remediation</li> </ul> <p>Status Tracking</p> <p>The project status is calculated based on retest dates when retests are active, providing real-time visibility into remediation progress.</p>"},{"location":"customer/#filtering-options","title":"Filtering Options","text":"<p>Customers can filter projects by:</p> <ul> <li>Status (Active, Upcoming, Delayed, On-Hold, Completed)</li> <li>Date range</li> <li>Project type</li> <li>Assessment scope</li> </ul>"},{"location":"customer/#available-actions","title":"Available Actions","text":"<p>Customers can:</p> <ul> <li>Download project reports (PDF and Excel formats only)</li> <li>View vulnerability details</li> <li>Track project timelines and status</li> <li>Monitor remediation progress</li> <li>Update profile information</li> <li>View detailed descriptions of security findings</li> <li>Access remediation guidance for each vulnerability</li> </ul>"},{"location":"customer/#profile-management","title":"Profile Management","text":"<p>Customers can edit certain aspects of their profile:</p> <ul> <li>Profile photo</li> <li>Password</li> <li>Display name</li> </ul> <p>Email Changes</p> <p>Email addresses cannot be modified by customers. Contact your security provider for email address changes.</p>"},{"location":"customer/#report-access","title":"Report Access","text":"<ul> <li>Access and download all finalized reports</li> <li>Reports are available in PDF and Excel formats</li> <li>Word (DOCX) reports are not available to customers</li> </ul>"},{"location":"getting-started/Contribution/","title":"Project Contribution","text":""},{"location":"getting-started/Contribution/#project-contribution","title":"Project Contribution","text":""},{"location":"getting-started/Contribution/#creator","title":"Creator","text":"<ul> <li>Sourav Kalal</li> </ul>"},{"location":"getting-started/Contribution/#special-thanks","title":"Special Thanks","text":"<ul> <li> <p>DJ Scruggs A big thanks to DJ Scruggs for creating the entire ViteJS frontend from scratch and implementing the APIs for version 1.0.</p> <ul> <li>GitHub</li> <li>Portfolio</li> <li>LinkedIn</li> </ul> </li> </ul>"},{"location":"getting-started/Contribution/#mention","title":"Mention","text":"<p>Yonathan johnson Started creating the frontend using React. Although he could not complete the development due to certain circumstances, his initiative and effort are greatly appreciated.</p>"},{"location":"getting-started/Features/","title":"Features","text":""},{"location":"getting-started/Features/#features","title":"Features","text":"<ul> <li> <p>Automated Report Generation: APTRS automates creating comprehensive penetration testing reports, saving time and ensuring consistency.</p> </li> <li> <p>PDF Docx, and Excel Reports: Generate professional-looking PDF, Docx and Excel reports with ease, providing clients and stakeholders with clear insights into security assessments.</p> </li> <li> <p>Vulnerability Management: APTRS helps you keep track of vulnerabilities across different projects, allowing for efficient management and mitigation.</p> </li> <li> <p>User-Friendly Interface: The tool is designed with a user-friendly interface, making it accessible for both novice and experienced penetration testers.</p> </li> <li> <p>Customization: Tailor your reports to meet specific project requirements, ensuring that the generated reports align with your organization's standards.</p> </li> <li> <p>Project and Customer Management: Manage all your projects, retest, and customer all in one place. The user and project tracking allows you to monitor the user's project allocation, plans, and status.</p> </li> <li> <p>Customer Portal Access: Customers can log in to their dedicated dashboard to view projects status (ongoing, on hold, completed), track progress, and download reports directly without requiring assistance.</p> </li> </ul>"},{"location":"getting-started/Sponsors/","title":"Sponsors","text":"<ul> <li>Many thanks to DigitalOcean for their generous support of the project.</li> </ul>"},{"location":"getting-started/demo/","title":"Demo","text":""},{"location":"getting-started/demo/#live-demo-instance","title":"Live Demo Instance","text":"<p>Explore the features of APTRS through our live demo instance:</p> <ul> <li>Live Demo</li> <li>Username: sourav.kalal@aptrs.com</li> <li>Password: I-am-Weak-Password-Please-Change-Me</li> </ul> <p>Feel free to interact with the tool and see how APTRS can streamline your penetration testing workflows.</p> <p>\ud83c\udf28\ufe0f Huge thanks to DigitalOcean for their support of the APTRS project.</p> <p>Warning</p> <p>\ud83d\udea7 APIs related to user profiles and user management, such as adding, editing, deleting users, and changing passwords, are disabled on the cloud-hosted demo instance.</p>"},{"location":"getting-started/license/","title":"License","text":"<p>The APTRS project is released under the MIT License, which is a permissive open-source license allowing anyone to use, modify, and distribute the software freely. This license ensures that the software remains open and accessible while permitting both personal and commercial use, provided that the original copyright notice and license terms are included in all copies or substantial portions of the software</p>"},{"location":"installation/DigitalOcean/","title":"Digital Ocean","text":"<p>APTRS can be installed on DigitalOcean using a Droplet. To proceed with the installation, follow the Manual Installation Guide.</p> <p>In the manual installation process, each service (e.g., Redis, PostgreSQL, etc.) is set up as unmanaged, meaning you manually install and configure everything. Alternatively, you can leverage DigitalOcean's Managed Services, such as Redis and PostgreSQL. For storage, you can use Spaces Object Storage.</p>"},{"location":"installation/DigitalOcean/#getting-started","title":"Getting Started","text":"<p>To get started, you need to set up the following:</p> <ul> <li>PostgreSQL Managed Database: For storing application data.</li> <li>Redis Managed Database: For caching and session management.</li> <li>Droplet: To host the frontend and backend code.</li> <li>Spaces Object Storage: For storing images and uploaded data.</li> </ul>"},{"location":"installation/DigitalOcean/#postgresql-setup","title":"PostgreSQL Setup","text":"<p>Follow these steps to set up a PostgreSQL Managed Database in DigitalOcean:</p> <ol> <li>Navigate to DigitalOcean Databases and select Create Database Cluster.</li> <li>Choose the desired Database Region.</li> <li>From the list of database engines, select PostgreSQL v14.</li> <li>Configure the CPU, database resources, and storage according to your requirements.</li> <li>Add a Cluster Name, or leave it as the default.</li> <li> <p>Click Create Database to finalize the setup.</p> </li> <li> <p>Navigate to the newly created PostgreSQL database.</p> </li> <li>In the Users and Databases section, create a new database and user for APTRS.</li> </ol>"},{"location":"installation/DigitalOcean/#redis-setup","title":"Redis Setup","text":"<ol> <li>Navigate to DigitalOcean Databases and select Create Database Cluster.</li> <li>Choose the desired Database Region.</li> <li> <p>From the list of database engines, select Caching.</p> </li> <li> <p>Configure the CPU, database resources, and storage according to your requirements.</p> </li> <li>Add a Cluster Name, or leave it as the default.</li> <li>Click Create Database to finalize the setup.</li> </ol>"},{"location":"installation/DigitalOcean/#space-object-storage-setup","title":"Space Object Storage Setup","text":"<ol> <li>Navigate to DigitalOcean Spaces and select Create a Space Bucket.</li> <li> <p>Choose the Region and add a Bucket Name.</p> </li> <li> <p>Click Create Space Bucket to complete the setup.</p> </li> <li>Navigate to Spaces Access Keys.</li> <li>Create a new Access Key with Read/Write/Delete permissions.</li> <li>Copy the Access Key and Secret Key for later use.</li> </ol>"},{"location":"installation/DigitalOcean/#droplet","title":"Droplet","text":"<ol> <li>Now to deploy APIs and Frontend we will use Droplet</li> <li>Navigate to https://cloud.digitalocean.com/droplets/new?i=aefe60&amp;region=blr1&amp;size=s-2vcpu-2gb and create a new Ubutnu Droplet</li> <li>SSH into the newly created droplet with root user</li> </ol> <p>Run the below Commands into the droplet</p> Bash<pre><code>sudo apt update\nsudo apt install python3-venv python3-dev libpq-dev weasyprint postgresql-client-common\nsudo adduser aptrs\nsudo usermod -aG sudo aptrs\nusermod -a -G www-data aptrs\nsudo su - aptrs\ncurl -sSL https://install.python-poetry.org | python3 -\nexport PATH=\"/home/aptrs/.local/bin:$PATH\"\ncd /home/aptrs\ngit clone https://github.com/APTRS/APTRS\ncd APTRS\npoetry install\ncd APTRS\ncp env.example .env\n</code></pre> <p>In the <code>.env</code> file, add the following details: - Bucket Details: Access Key, Secret Key, and Bucket Name. - Database Details: Connection strings for PostgreSQL and Redis. - Domain Name: Your application's domain.</p> <p>You can refer to the sample <code>.env</code> file below for guidance. Python<pre><code>SECRET_KEY='3-3hnf1kkn#x0350(we+9^m@69xc3_e_@_7$2tf=d)6$i*t_0#'  # change secret key\nWHITELIST_IP= [\"http://demo.aptrs.com\"]   ## your domain name\nALLOWED_HOST = [\"demo.aptrs.com\"]    ## your domain/host name without http https\nCORS_ORIGIN = [\"https://demo.aptrs.com\"]  ## CORS domain keep your domain\nREDIS_URL='redis://&lt;username&gt;:&lt;password&gt;@&lt;host&gt;:&lt;port&gt;/'\nPOSTGRES_USER=\"&lt;user&gt;\"\nPOSTGRES_PASSWORD=\"&lt;password&gt;\"\nPOSTGRES_HOST=\"&lt;host&gt;\"\nPOSTGRES_PORT=25060\nPOSTGRES_DB=\"&lt;DB Name&gt;\"\nUSE_DOCKER=False\nUSER_TIME_ZONE=\"Asia/Kolkata\"\nUSE_S3=True\nAWS_ACCESS_KEY_ID='&lt;Bucket Access KEY&gt;'\nAWS_SECRET_ACCESS_KEY='&lt;Bucket Secret KEY&gt;'\nAWS_STORAGE_BUCKET_NAME='&lt;BUCKET NAME&gt;'\nAWS_S3_REGION_NAME='nyc3' #keep it nyc3 unless error in connection\nAWS_S3_CUSTOM_DOMAIN='&lt;BUCKET URL&gt;/'  ## ex https://aptrs.blr1.digitaloceanspaces.com/  - Make sure ends with /\nAWS_S3_ENDPOINT_URL='&lt;BUCKET URL&gt;/'  ## ex https://aptrs.blr1.digitaloceanspaces.com/  - Make sure ends with /\n</code></pre></p> <p>Once the env file is setup, run the below command</p> Bash<pre><code>poetry shell\npython3 manage.py makemigrations accounts\npython3 manage.py makemigrations configapi\npython3 manage.py makemigrations customers\npython3 manage.py makemigrations project\npython3 manage.py makemigrations vulnerability\npython3 manage.py makemigrations\npython3 manage.py migrate\npython3 manage.py first_setup\nexit\n</code></pre> <p>Once we have completed the required setup, we need to start the server. APTRS uses Gunicorn for this purpose, which should already be installed through the steps we have completed so far.</p>"},{"location":"installation/DigitalOcean/#setting-up-gunicorn-service","title":"Setting up Gunicorn Service","text":"<p>First, we need to locate the full path of Gunicorn in our Poetry virtual environment:</p> Bash<pre><code>$&gt; cd /home/aptrs/APTRS\n$&gt; poetry run which gunicorn\n\n## Example output (your path will likely be different):\n/home/aptrs/.cache/pypoetry/virtualenvs/aptrs-h1P6HTQN-py3.12/bin/gunicorn\n</code></pre> <p>Important</p> <p>Make note of this path as you'll need it in the next step when configuring the Gunicorn service.</p> <p>Once we have the full path for Gunicorn, we can set up the <code>gunicorn.service</code> file:</p> Bash<pre><code>sudo nano /etc/systemd/system/gunicorn.service\n</code></pre> <p>In the nano file editor, paste the following configuration. Remember to replace the <code>ExecStart</code> path with the full Gunicorn path you found in the previous step:</p> Bash<pre><code>[Unit]\nDescription=gunicorn daemon to serve APTRS\nRequires=gunicorn.socket\nAfter=network.target\n\n[Service]\nUser=aptrs\nGroup=www-data\nWorkingDirectory=/home/aptrs/APTRS/APTRS\n# Replace this path with your actual Gunicorn path from the previous step\nExecStart=/home/aptrs/.cache/pypoetry/virtualenvs/aptrs-h1P6HTQN-py3.12/bin/gunicorn --workers 3 --access-logfile - --bind unix:/run/gunicorn.sock APTRS.wsgi:application\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>We can now set up the <code>gunicorn.socket</code> using the command below:</p> Bash<pre><code>sudo nano /etc/systemd/system/gunicorn.socket\n</code></pre> <p>Add the following configuration to the socket file:</p> Bash<pre><code>[Unit]\nDescription=gunicorn socket\n\n[Socket]\nListenStream=/run/gunicorn.sock\n\n[Install]\nWantedBy=sockets.target\n</code></pre>"},{"location":"installation/DigitalOcean/#starting-and-enabling-gunicorn-services","title":"Starting and Enabling Gunicorn Services","text":"<p>Now that everything is configured, we can start and enable the Gunicorn services:</p> Bash<pre><code>sudo systemctl start gunicorn.socket\nsudo systemctl enable gunicorn.socket\nsudo systemctl enable gunicorn\nsudo systemctl daemon-reload\nsudo systemctl restart gunicorn\n</code></pre>"},{"location":"installation/DigitalOcean/#verifying-the-api-service","title":"Verifying the API Service","text":"<p>To verify that the APTRS APIs are operational, run this command:</p> Bash<pre><code>curl --unix-socket /run/gunicorn.sock localhost/api/config/ping/\n</code></pre> <p>You should receive a success response like this: JSON<pre><code>{\"status\":\"ok\",\"message\":\"Server is up and running!\"}\n</code></pre></p> <p>Troubleshooting</p> <p>If you encounter any issues, check the status of the Gunicorn socket and service: Bash<pre><code>sudo systemctl status gunicorn.socket\nsudo systemctl status gunicorn\n</code></pre> Look for any error messages in the output to help diagnose the problem.</p>"},{"location":"installation/DigitalOcean/#frontend-vitejs-setup","title":"Frontend ViteJs Setup","text":"<p>This section covers the installation and configuration of the APTRS frontend built with Vite.js.</p>"},{"location":"installation/DigitalOcean/#installing-nodejs-and-npm","title":"Installing Node.js and NPM","text":"<p>First, install Node.js and NPM:</p> Bash<pre><code>sudo apt install nodejs\nsudo apt install npm\n</code></pre>"},{"location":"installation/DigitalOcean/#configuring-the-frontend-environment","title":"Configuring the Frontend Environment","text":"<p>After installing NPM and Node.js, we need to create a <code>.env</code> file for the frontend that points to our backend API:</p> Bash<pre><code>cd /home/aptrs/APTRS/frontend\ncp env.example .env\nnano .env\n</code></pre> <p>In the Nano editor, modify the content to the following:</p> Bash<pre><code>VITE_APP_API_URL = /api/\nVITE_APP_ENV = production\n</code></pre> <p>API URL Configuration</p> <p>We're using <code>/api/</code> as the backend URL since both the frontend and backend will be served from the same domain through Nginx's reverse proxy. For more details on frontend configuration, see the Frontend documentation.</p> <p>Now that we have configured the env file, we can install the required packages for the frontend with the command below:</p> Bash<pre><code>npm install\n</code></pre> <p>Once we have all the packages installed, we can build the frontend using the command below.</p> Bash<pre><code>npm run build\n</code></pre> <p>Once the build is completed, we can see all the front-end build at the directory below:</p> Bash<pre><code>cd /home/aptrs/APTRS/frontend/dist\nls\n\nandroid-chrome-192x192.png \u00a0assets \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 favicon.ico \u00a0 \u00a0 \u00a0 logo.svg \u00a0 \u00a0 \u00a0 stats.html\nandroid-chrome-512x512.png \u00a0favicon-16x16.png \u00a0hero-desktop.png \u00a0manifest.json\napple-touch-icon.png \u00a0 \u00a0 \u00a0 \u00a0favicon-32x32.png \u00a0index.html \u00a0 \u00a0 \u00a0 \u00a0robots.txt\n</code></pre>"},{"location":"installation/DigitalOcean/#nginx-setup","title":"Nginx Setup","text":"<p>We have everything set up, and our APIs are running with Gunicorn. Now, we need to configure the frontend to serve static files with Nginx and connect Gunicorn to Nginx. To get started, we first need to install Nginx using the command below:</p> Bash<pre><code>sudo apt install nginx\n</code></pre> <p>Since our frontend and backend are in the user directory, we will encounter a permission error from Nginx. To resolve this, we will grant access to the www-data user group with the command below:</p> Bash<pre><code>sudo chown -R aptrs:www-data /home/aptrs\n</code></pre> <p>To complete the setup, we can assume the domain name for our web server is <code>demo.aptrs.com</code>. The configuration below will have the nginx configuration files or folder names based on the domain, which users should replace with their actual domain.</p> <p>Next, we will create a new server block in the Nginx sites-available directory using the following command:</p> Bash<pre><code>sudo nano /etc/nginx/sites-available/demo.aptrs.com\n</code></pre> <p>Paste the Below nginx configuration,</p> Bash<pre><code># HTTP server configuration\nserver {\n\u00a0 \u00a0 listen 80;\n\u00a0 \u00a0 server_name demo.aptrs.com; \u00a0# Replace with your domain\n\n\u00a0 \u00a0 server_tokens off;\n\u00a0 \u00a0 client_max_body_size 100M;\n\n\n\n\u00a0 \u00a0 ### Host Validation - &gt; Update according to your need\n\u00a0 \u00a0 if ( $host !~* ^(demo.aptrs.com)$ ) {\n\u00a0 \u00a0 \u00a0 \u00a0 return 444;\n }\n\n\u00a0 \u00a0 # Pass all /api/* to the Django backend\n\u00a0 \u00a0 location /api/ {\n\u00a0 \u00a0 \u00a0 \u00a0 proxy_pass http://unix:/run/gunicorn.sock;\n\u00a0 \u00a0 \u00a0 \u00a0 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\u00a0 \u00a0 \u00a0 \u00a0 proxy_set_header X-Forwarded-Proto $scheme;\n\u00a0 \u00a0 \u00a0 \u00a0 proxy_set_header Host $host;\n\u00a0 \u00a0 \u00a0 \u00a0 proxy_redirect off;\n }\n\n\u00a0 \u00a0 # Home page for frontend\n\u00a0 \u00a0 location / {\n\u00a0 \u00a0 root /home/aptrs/APTRS/frontend/dist;\n\u00a0 \u00a0 index index.html index.htm;\n\u00a0 \u00a0 try_files $uri $uri/ /index.html =404;\n }\n\u00a0 \u00a0 ## Server Static from Django over nginx\n\u00a0 \u00a0 location /static/ {\n\u00a0 \u00a0 \u00a0 \u00a0 alias /home/aptrs/APTRS/APTRS/static/;\n }\n\n\u00a0 \u00a0 # Blocked, accessing the whole media folder may lead to access to sensitive images like POC images,\n\u00a0 \u00a0 #location /media/ {\n\u00a0 \u00a0 # \u00a0 \u00a0alias /home/aptrs/APTRS/APTRS/media/; \u00a0# Path to your media files\n\u00a0 \u00a0 #}\n\n\u00a0 \u00a0 location = /favicon.ico {\n\u00a0 \u00a0 alias /home/aptrs/APTRS/frontend/dist/favicon.ico;\n\u00a0 \u00a0 access_log off;\n\u00a0 \u00a0 log_not_found off;\n\u00a0 \u00a0\n }\n\n\u00a0 \u00a0 ## Server user profile photo\n\u00a0 \u00a0 location /media/profile/ {\n\u00a0 \u00a0 \u00a0 \u00a0 alias /home/aptrs/APTRS/APTRS/media/profile/; \u00a0# Path to your media files\n }\n\n\u00a0 \u00a0 ## Server Company Logo Images\n\u00a0 \u00a0 location /media/company/ {\n\u00a0 \u00a0 \u00a0 \u00a0 alias /home/aptrs/APTRS/APTRS/media/company/; \u00a0# Path to your media files\n }\n\n\u00a0 \u00a0 ## HTML Report design Images like background images\n\u00a0 \u00a0 location /media/report/ {\n\u00a0 \u00a0 \u00a0 \u00a0 alias /home/aptrs/APTRS/APTRS/media/report/; \u00a0# Path to your media files\n }\n\n\u00a0 \u00a0 access_log /var/log/nginx/APTRS_access.log; \u00a0# Path to access log file\n\u00a0 \u00a0 error_log /var/log/nginx/APTRS_error.log; \u00a0 # Path to the error log file\n}\n</code></pre> <p>Let\u2019s enable the file by creating a link from it to the\u00a0sites-enabled\u00a0directory, which Nginx reads from during startup:</p> Bash<pre><code>sudo ln -s /etc/nginx/sites-available/demo.aptrs.com /etc/nginx/sites-enabled/\n</code></pre> <p>Let's verify if any error from the nginx with</p> <p>Bash<pre><code>sudo nginx -t\n</code></pre> If there are no errors we can start the nginx</p> Bash<pre><code>sudo systemctl restart nginx\n</code></pre> <p>Installation Complete</p> <p>At this point, your APTRS installation should be complete and accessible via your domain or IP address. You can navigate to http://your-domain.com (or https:// if you've set up SSL) in your browser to access the APTRS interface.</p>"},{"location":"installation/DigitalOcean/#https-certificate","title":"HTTPS Certificate","text":"<p>For production environments, it's highly recommended to secure your site with HTTPS. We can use Let's Encrypt and Certbot to obtain a free SSL certificate:</p> Bash<pre><code>sudo apt install certbot python3-certbot-nginx\nsudo certbot --nginx -d demo.aptrs.com\nsudo systemctl status certbot.timer\nsudo certbot renew --dry-run\n</code></pre> <p>The certbot utility will guide you through the process of obtaining and installing the certificate. It will also modify your Nginx configuration to use HTTPS and redirect HTTP traffic to HTTPS.</p> <p>Auto-renewal</p> <p>Certbot automatically adds a timer to renew certificates before they expire. You can verify this is working with the <code>sudo systemctl status certbot.timer</code> command.</p>"},{"location":"installation/certificate/","title":"SSL Certificate Management","text":""},{"location":"installation/certificate/#default-configuration","title":"Default Configuration","text":"<p>APTRS uses HTTPS with a self-signed certificate by default. While this provides encryption, browsers will display security warnings because the certificate isn't issued by a trusted certificate authority (CA).</p>"},{"location":"installation/certificate/#replacing-the-self-signed-certificate","title":"Replacing the Self-Signed Certificate","text":"<p>You can replace the default self-signed certificate with your own certificate in one of two ways:</p>"},{"location":"installation/certificate/#option-1-replace-certificate-files-in-docker","title":"Option 1: Replace Certificate Files in Docker","text":"<p>If you're using the Docker deployment method, you can replace the certificate files located at:</p> <p>https://github.com/APTRS/APTRS/tree/main/Certificate</p> <p>You'll need to replace both: - <code>certificate.crt</code> - Your SSL certificate file - <code>certificate.key</code> - Your private key file</p> <p>After replacing these files, rebuild and restart your Docker containers:</p> PowerShell<pre><code>docker-compose down\ndocker-compose build\ndocker-compose up -d\n</code></pre>"},{"location":"installation/certificate/#option-2-use-nginx-as-ssl-termination-proxy-recommended","title":"Option 2: Use Nginx as SSL Termination Proxy (Recommended)","text":"<p>For production environments, we recommend using Nginx as an SSL termination proxy in front of APTRS. This method allows you to:</p> <ol> <li>Use professionally issued certificates (e.g., Let's Encrypt)</li> <li>Manage certificate renewals outside of the APTRS containers</li> <li>Configure advanced SSL settings for optimal security</li> </ol>"},{"location":"installation/certificate/#steps-for-nginx-ssl-configuration","title":"Steps for Nginx SSL Configuration:","text":"<ol> <li>Obtain a valid SSL certificate (e.g., using Let's Encrypt certbot)</li> <li>Configure Nginx with your certificate</li> <li>Set up Nginx to proxy requests to APTRS</li> </ol> <p>Example Nginx configuration with SSL:</p> Nginx Configuration File<pre><code>server {\n    listen 80;\n    server_name your-aptrs-domain.com;\n\n    # Redirect HTTP to HTTPS\n    return 301 https://$host$request_uri;\n}\n\nserver {\n    listen 443 ssl;\n    server_name your-aptrs-domain.com;\n\n    # SSL Certificate Configuration\n    ssl_certificate     /path/to/your/fullchain.pem;\n    ssl_certificate_key /path/to/your/privkey.pem;\n    ssl_protocols       TLSv1.2 TLSv1.3;\n    ssl_ciphers         HIGH:!aNULL:!MD5;\n\n    # Proxy to APTRS\n    location / {\n        proxy_pass http://localhost:8000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n</code></pre>"},{"location":"installation/certificate/#using-lets-encrypt-for-free-ssl-certificates","title":"Using Let's Encrypt for Free SSL Certificates","text":"<p>For production environments, Let's Encrypt provides free, trusted SSL certificates that are automatically renewable.</p>"},{"location":"installation/certificate/#installing-certbot-for-lets-encrypt","title":"Installing Certbot for Let's Encrypt:","text":"PowerShell<pre><code># For Ubuntu/Debian systems\nsudo apt update\nsudo apt install certbot python3-certbot-nginx\n\n# For CentOS/RHEL systems\nsudo dnf install certbot python3-certbot-nginx\n</code></pre>"},{"location":"installation/certificate/#obtaining-a-certificate","title":"Obtaining a Certificate:","text":"PowerShell<pre><code>sudo certbot --nginx -d your-aptrs-domain.com\n</code></pre> <p>This command will: 1. Obtain a certificate 2. Automatically configure your Nginx settings 3. Set up automatic renewal</p> <p>Certificate Renewal</p> <p>Let's Encrypt certificates expire after 90 days. Certbot installs a cron job or systemd timer to automatically renew your certificates before they expire.</p>"},{"location":"installation/certificate/#ssl-certificate-best-practices","title":"SSL Certificate Best Practices","text":"<ol> <li>Use Strong Protocols: Enable only TLSv1.2 and TLSv1.3</li> <li>Configure Forward Secrecy: Use ECDHE and DHE cipher suites</li> <li>Implement HSTS: Add Strict-Transport-Security header</li> <li>Test Your Configuration: Use SSL Labs to verify your setup</li> <li>Automate Renewals: Ensure certificates are automatically renewed before expiration</li> </ol>"},{"location":"installation/docker/","title":"Docker","text":""},{"location":"installation/docker/#linux","title":"Linux","text":"Bash<pre><code>git clone https://github.com/APTRS/APTRS\ncd APTRS\ncp env.docker .env\nnano .env\ndocker-compose up \n</code></pre>"},{"location":"installation/docker/#windows","title":"Windows","text":"Bash<pre><code>git clone https://github.com/APTRS/APTRS\ncd APTRS\ncopy env.docker .env\nnotepad .env\ndocker-compose up \n</code></pre> <p>Note</p> <p>The .env file contains all the environment variables, such as passwords for JWT, Database credentials, Cloud S3 bucket details, etc. It\u2019s important to update the default passwords and details before deploying the application. For more information, refer to the Environment Variables section.</p>"},{"location":"installation/env/","title":"Environment Variables","text":"<p>The APTRS backend uses the <code>.env</code> file to store credentials such as S3 bucket information, database credentials, secret keys, whitelisted IPs/domains, and more.</p> <ul> <li>If you are deploying the application with Docker, make sure to update the details in the .env file from the project root.</li> <li>If you are deploying the application without Docker, you will need to update specific details like the S3 bucket and whitelisted IPs.</li> </ul> ENV Description Docker Linux Server Manual Setup <code>SECRET_KEY</code> This key is used by Backend including JWT, Should be secured and random. Manually need to be updated in env file Manually need to be updated in env file <code>WHITELIST_IP</code> This allows to set whitelisted IP/domain with port number to allow loading resource during PDF report to prevent SSRF vulnerability. Manually need to be updated in env file, make sure to keep the <code>https://nginx</code> as its required to connect with nginx within Docker Manually need to be updated in env file based on your domain name, IP etc. <code>ALLOWED_HOST</code> Whitelist allowed host to prevent host header injection attack Manually need to be updated in env file Manually need to be updated in env file based on your domain name, IP etc. <code>CORS_ORIGIN</code> Whitelist allowed origin to prevent cross origin attack Manually need to be updated in env file Manually need to be updated in env file based on your domain name, IP etc. <code>REDIS_URL</code> Redis Server Details including IP, Port and password Should replace the default password <code>q8N8HwlaOWqOl1hG7rdmBsm7oT52fLKHZXFwOB4VM7SXFDV8wg</code> to a new strong random password. Do not update other details except password Manually need to be updated in env file for REDIS password, IP and Port details <code>REDIS_PASSWORD</code> Redis Server password for Redis image in docker Should replace the default password <code>q8N8HwlaOWqOl1hG7rdmBsm7oT52fLKHZXFwOB4VM7SXFDV8wg</code> to a new strong random password. Password in REDIS_URL  and REDIS_PASSWORD should be same Not needed and no need to update/add. <code>POSTGRES_USER</code> , <code>POSTGRES_PASSWORD</code>, <code>POSTGRES_PORT</code>, <code>POSTGRES_DB</code> Postgres DB username, password, port, and DB names Manually need to be updated in env file Manually need to be updated in env file. <code>POSTGRES_HOST</code> Postgres host name Should not be updated. Manually need to be updated in env file. <code>USE_S3</code> If you want to use Cloud S3 bucket Digital Ocean or AWS s3 bucket. Default <code>False</code>, you can change it to <code>True</code> Optional Optional <code>AWS_ACCESS_KEY_ID</code> <code>AWS_SECRET_ACCESS_KEY</code> <code>AWS_STORAGE_BUCKET_NAME</code> <code>AWS_S3_REGION_NAME</code> <code>AWS_S3_CUSTOM_DOMAIN</code> <code>AWS_S3_ENDPOINT_URL</code> Bucket details if <code>USE_S3</code> is set to <code>True</code> Optional Optional <code>USE_DOCKER</code> Used by APTRS Django code to validate if application deployed on Docker or Not Optional, It is already declared as <code>True</code> in Docker file Required to set to <code>False</code> <code>USER_TIME_ZONE</code> Used by APTRS Django code and Background task schedule time using celery Required to set the local time zon or UTC Required to set the local time zon or UTC <code>USE_EMAIL</code> Enable/disable email functionality for project status updates, password resets, invitations, etc. Required (set to <code>True</code> if using email, <code>False</code> otherwise) Required (set to <code>True</code> if using email, <code>False</code> otherwise) <code>EMAIL_HOST</code> SMTP server hostname Required if <code>USE_EMAIL=True</code>, leave empty otherwise Required if <code>USE_EMAIL=True</code>, leave empty otherwise <code>EMAIL_PORT</code> SMTP server port Required (typically <code>587</code> for TLS, <code>465</code> for SSL) Required (typically <code>587</code> for TLS, <code>465</code> for SSL) <code>EMAIL_USE_TLS</code> Whether to use TLS encryption for SMTP Required (set to <code>True</code> or <code>False</code>) Required (set to <code>True</code> or <code>False</code>) <code>EMAIL_HOST_USER</code> SMTP username/login Required if <code>USE_EMAIL=True</code>, leave empty otherwise Required if <code>USE_EMAIL=True</code>, leave empty otherwise <code>EMAIL_HOST_PASSWORD</code> SMTP password Required if <code>USE_EMAIL=True</code>, leave empty otherwise Required if <code>USE_EMAIL=True</code>, leave empty otherwise <code>DEFAULT_FROM_EMAIL</code> The default sender email address Required if <code>USE_EMAIL=True</code>, leave empty otherwise Required if <code>USE_EMAIL=True</code>, leave empty otherwise <code>FRONTEND_URL</code> URL for the frontend, used in email links Required if <code>USE_EMAIL=True</code>, set to your application's public URL Required if <code>USE_EMAIL=True</code>, set to your application's public URL <ul> <li>List of Supported Time Zone</li> </ul>"},{"location":"installation/env/#email-configuration","title":"Email Configuration","text":""},{"location":"installation/env/#setting-up-email","title":"Setting Up Email","text":"<p>APTRS can send emails for various functions including: - Password reset links - User invitations - Project status updates (on hold, completed, etc.) - Customer notifications</p> <p>Email Setup Requirements</p> <p>Even if you don't plan to use email functionality (<code>USE_EMAIL=False</code>), you must still set values for <code>EMAIL_PORT</code> and <code>EMAIL_USE_TLS</code>. You can use any integer for port (e.g., <code>587</code>) and either <code>True</code> or <code>False</code> for TLS.</p>"},{"location":"installation/env/#example-email-configuration","title":"Example Email Configuration","text":"Python<pre><code># Enable email functionality\nUSE_EMAIL=True\n# SMTP server details\nEMAIL_HOST='smtp.gmail.com'\nEMAIL_PORT=587\nEMAIL_USE_TLS=True\nEMAIL_HOST_USER='your-email@gmail.com'\nEMAIL_HOST_PASSWORD='your-app-password'\nDEFAULT_FROM_EMAIL='APTRS &lt;your-email@gmail.com&gt;'\n# Your application's public URL for links in emails\nFRONTEND_URL='https://your-aptrs-domain.com'\n</code></pre>"},{"location":"installation/frontend/","title":"APTRS Frontend Configuration Guide","text":""},{"location":"installation/frontend/#building-the-frontend","title":"Building the Frontend","text":"<p>APTRS includes the Vite.js frontend source code by default, giving you flexibility to customize the frontend as needed.</p>"},{"location":"installation/frontend/#docker-deployment","title":"Docker Deployment","text":"<p>If you're using Docker, the build process is automatic\u2014no manual steps required.</p>"},{"location":"installation/frontend/#manual-deployment","title":"Manual Deployment","text":"<p>If you're manually deploying APTRS, you need to build the frontend yourself:</p> Bash<pre><code>git clone https://github.com/APTRS/APTRS\ncd APTRS\ncd Frontend\ncp env.example .env\nnpm run build\n</code></pre> <p>Environment Configuration</p> <p>The <code>.env</code> file contains critical settings including the backend API URL and environment type. The most important setting is <code>VITE_APP_API_URL</code>.</p>"},{"location":"installation/frontend/#critical-requirement-same-domain-access","title":"Critical Requirement: Same-Domain Access","text":"<p>Critical Deployment Requirement</p> <p>APTRS requires that frontend and backend be accessible from the same domain, IP, and port. While technically possible to configure differently, doing so will break core functionality.</p>"},{"location":"installation/frontend/#why-same-domain-access-is-mandatory","title":"Why Same-Domain Access Is Mandatory","text":"<p>APTRS is designed with specific security and functionality requirements that make same-domain deployment necessary:</p>"},{"location":"installation/frontend/#1-authentication-system-limitations","title":"1. Authentication System Limitations","text":"<ul> <li>Cookie-Based Authentication: APTRS uses HTTP cookies alongside JWT tokens</li> <li>Browser Security Restrictions: Browsers implement Same-Origin Policy (SOP) that restricts cookie sharing between domains</li> <li>Cross-Domain Challenges: Authentication will fail or require complex workarounds when domains differ</li> <li>Practical Impact: Users may be repeatedly logged out or unable to access secured resources</li> </ul>"},{"location":"installation/frontend/#2-image-storage-and-display","title":"2. Image Storage and Display","text":"<ul> <li>How APTRS Stores Images: When users upload images (especially in vulnerability reports), CKEditor stores the full URL</li> <li>Hardcoded Paths: URLs are saved with the domain name in the database</li> <li>Domain Change Problems: If your API domain changes, all previously saved images will break</li> <li>Practical Impact: Reports with missing evidence images look unprofessional to clients</li> </ul>"},{"location":"installation/frontend/#3-browser-security-restrictions","title":"3. Browser Security Restrictions","text":"<ul> <li>Static Resource Limitations: Browsers don't send authentication headers for images, CSS, etc.</li> <li>Authentication Headers: Can't be included in <code>&lt;img&gt;</code> tags and other static resource requests</li> <li>Resource Access: Protected images won't display without same-domain cookies</li> <li>Practical Impact: Vulnerability evidence, company logos, and other critical images won't display</li> </ul>"},{"location":"installation/frontend/#real-world-example-of-problems","title":"Real-World Example of Problems","text":"<p>When frontend and backend are on different domains:</p> Text Only<pre><code>Frontend: https://aptrs-app.com\nBackend API: https://aptrs-api.com/api\n</code></pre> <ol> <li>User uploads an image through CKEditor for a vulnerability</li> <li>Image is stored with URL <code>https://aptrs-api.com/api/media/vulnerability/evidence.jpg</code></li> <li>This full URL is saved in the database</li> <li>If you later change the API domain to <code>https://new-api.com</code>:</li> <li>All previously uploaded images break</li> <li>Reports missing images look unprofessional</li> <li>Vulnerability evidence is missing</li> <li>You can't fix URLs already saved in the database</li> </ol>"},{"location":"installation/frontend/#the-solution-same-domain-deployment","title":"The Solution: Same-Domain Deployment","text":"<p>When frontend and backend share the same domain:</p> Text Only<pre><code>Frontend: https://aptrs.com/\nBackend API: https://aptrs.com/api/\n</code></pre> <ol> <li>User uploads an image through CKEditor</li> <li>Image is stored with relative URL <code>/api/media/vulnerability/evidence.jpg</code></li> <li>This works regardless of domain changes</li> <li>Authentication cookies work seamlessly</li> <li>Reports always display correctly</li> </ol>"},{"location":"installation/frontend/#deployment-options-while-maintaining-same-domain-access","title":"Deployment Options (While Maintaining Same-Domain Access)","text":""},{"location":"installation/frontend/#option-1-single-server-deployment","title":"Option 1: Single Server Deployment","text":"<p>The simplest approach is hosting both frontend and backend on the same server:</p> <ol> <li>Build the frontend as described above</li> <li>Configure Nginx to serve:</li> <li>Frontend from the <code>dist</code> directory</li> <li>Backend by proxying requests to <code>/api/*</code> to your Django server</li> </ol>"},{"location":"installation/frontend/#option-2-separate-servers-with-unified-domain","title":"Option 2: Separate Servers with Unified Domain","text":"<p>If you need separate servers for scalability:</p> <ol> <li>Host frontend on Server A</li> <li>Host backend on Server B</li> <li>Configure a load balancer or reverse proxy (like Nginx) in front of both</li> <li>Present a single domain to users</li> <li>Route traffic based on path:</li> <li><code>/api/*</code> \u2192 Backend server</li> <li>All other paths \u2192 Frontend server</li> </ol> Text Only<pre><code>\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2551               \u2551     \u2502                 \u2502\n\u2551  User Browser \u2551\u2500\u2500\u2500\u2500\u2500\u2524 Load Balancer   \u2502\n\u2551               \u2551     \u2502 (same domain)   \u2502\n\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                               \u2502\n                 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                 \u2502                           \u2502\n        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n        \u2502                \u2502         \u2502                \u2502\n        \u2502 Frontend       \u2502         \u2502 Backend        \u2502\n        \u2502 Server         \u2502         \u2502 Server         \u2502\n        \u2502                \u2502         \u2502                \u2502\n        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"installation/frontend/#configuration-steps","title":"Configuration Steps","text":""},{"location":"installation/frontend/#frontend-env-configuration","title":"Frontend <code>.env</code> Configuration","text":"<p>When properly set up with same-domain access, your frontend <code>.env</code> file should use:</p> Text Only<pre><code>VITE_APP_API_URL = /api/\nVITE_APP_ENV = production\n</code></pre> <p>The crucial part is <code>/api/</code> (not a full URL), which ensures all API requests are relative to the current domain.</p>"},{"location":"installation/frontend/#nginx-configuration-example","title":"Nginx Configuration Example","text":"<p>Here's a sample Nginx configuration for same-domain deployment:</p> Nginx Configuration File<pre><code>server {\n    listen 80;\n    server_name aptrs.yourdomain.com;\n\n    # Frontend\n    location / {\n        root /path/to/aptrs/frontend/dist;\n        try_files $uri $uri/ /index.html;\n    }\n\n    # Backend API\n    location /api/ {\n        proxy_pass http://127.0.0.1:8000;  # Django backend\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n    }\n\n    # Media files\n    location /media/ {\n        proxy_pass http://127.0.0.1:8000;\n    }\n\n    # Static files\n    location /static/ {\n        proxy_pass http://127.0.0.1:8000;\n    }\n}\n</code></pre>"},{"location":"installation/frontend/#troubleshooting","title":"Troubleshooting","text":"<p>If you experience issues with images not displaying or authentication problems, check:</p> <ol> <li>That frontend and backend share the same domain</li> <li>Your frontend <code>.env</code> file uses just <code>/api/</code> (not a full URL)</li> <li>Nginx or your proxy is correctly routing <code>/api/*</code> paths to the backend</li> <li>CORS and cookie settings in your Django backend configuration</li> </ol> <p>Never Configure Separate Domains</p> <p>While technically possible to configure, using separate domains for frontend and API will cause persistent, difficult-to-fix problems with authentication and image display that significantly impact the usability of APTRS.</p>"},{"location":"installation/install/","title":"Install","text":"<p>APTRS can be installed using two methods:</p> <ul> <li>Docker (Recommended for most users)</li> <li>Manual (User with Knowledge of Nginx and Little Python and Nodejs)</li> </ul> <p>Note</p> <p>APTRS does not natively support Windows installations and setting it up on Windows is not recommended. While it's possible to manually install certain components (such as the APTRS Backend, Frontend, and Database) on Windows, key dependencies like Redis require a Linux environment. Instead, you can use the Docker setup for Windows, which is the preferred option for Windows users.</p> <p>Note</p> <p>Default creds are sourav.kalal@aptrs.com &amp; I-am-Weak-Password-Please-Change-Me</p> <p>Note</p> <p>APTRS uses cookie attributes such as Secure, HttpOnly, and Lax. For users with a Docker setup, these attributes will not have any effect. However, users with a manual setup need to ensure that they use HTTPS and that both the front end and back end are on the same domain or IP address.</p>"},{"location":"installation/manual/","title":"Manual Installation","text":"<p>If you prefer to install the APTRS without Docker and have more control over each service, such as Redis, Postgresql, Nginx, etc., or if you want to host the database on a different server, Redis on a different server, etc., you can follow the below process for deploying the APTRS on a server without Docker.</p> <p>The steps mentioned below were tested on the below setup:</p> <ul> <li>OS - Ubuntu 24.10</li> <li>Python - 3.12.7 \u00a0(3.9+ is required)</li> <li>Python Poetry - 1.8.4</li> <li>PostgreSQL - 16.4 (Ubuntu 16.4-1build1)</li> <li>Redis Server - 7.0.15</li> <li>Nginx - 1.26.0</li> <li>NodeJS - 20.16.0 (18+ is required)</li> <li>NPM - 9.2.0</li> </ul> <p>Note</p> <p>While we have provided detailed steps for manual installation and deployment, please note that this method is more prone to errors. Variations in software versions, updates, system configurations, and other factors may result in unexpected issues. Manual installation is intended for individuals who have a solid understanding of Linux, some level of development experience, or expertise in application deployment, and are comfortable troubleshooting potential errors that may arise.</p>"},{"location":"installation/manual/#reference-links","title":"Reference Links","text":"<ul> <li>Digital Ocean - How To Set Up Django with Postgres, Nginx, and Gunicorn on Ubuntu</li> <li>Digital Ocean - How To Install Nginx on Ubuntu 20.04</li> <li>Digital Ocean - How To Secure Nginx with Let's Encrypt on Ubuntu 20.04</li> <li>Digital Ocean - How To Install and Secure Redis on Ubuntu 22.04</li> <li>Digital Ocean - How To Install and Use PostgreSQL on Ubuntu 20.04</li> </ul>"},{"location":"installation/manual/#postgresql-setup","title":"PostgreSQL Setup","text":"<p>Run the below command to install PostgreSQL.</p> Bash<pre><code>sudo apt-get install \u00a0postgresql postgresql-contrib\n</code></pre> <p>After the installation is complete, we can access the PostgreSQL shell using the command below.</p> Bash<pre><code>sudo -u postgres psql\n</code></pre> <p>From the PostgreSQL shell, create a new database for the APTRS project. Change the name to something relevant to the project.</p> Bash<pre><code>CREATE DATABASE aptrsdb;\n</code></pre> <p>Next, create a database user for our project. Make sure to select a secure password:</p> Bash<pre><code>CREATE USER aptrsdb_user WITH PASSWORD 's!!D%AriPB-MO~5';\n</code></pre> <p>We will set the default encoding to UTF-8 and adjust other settings. Please update the time zone according to your preference, and ensure we use the same time zone as the APTRS.</p> Bash<pre><code>ALTER ROLE aptrsdb_user SET client_encoding TO 'utf8';\nALTER ROLE aptrsdb_user SET default_transaction_isolation TO 'read committed';\nALTER ROLE aptrsdb_user SET timezone TO 'UTC';\n\n\\c aptrsdb;\nGRANT USAGE ON SCHEMA public TO aptrsdb_user;\nGRANT ALL PRIVILEGES ON SCHEMA public TO aptrsdb_user;\nGRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO aptrsdb_user;\nGRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO aptrsdb_user;\nALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL PRIVILEGES ON TABLES TO aptrsdb_user;\nGRANT ALL PRIVILEGES ON DATABASE aptrsdb TO aptrsdb_user;\n\\q\n</code></pre> <p>After completing our tasks, we ensure that the PostgreSQL service is running and set to start automatically on reboot.</p> Bash<pre><code>sudo systemctl start postgresql\nsudo systemctl enable postgresql\n</code></pre>"},{"location":"installation/manual/#redis-setup","title":"Redis Setup","text":"<p>To install Redis, run the command below.</p> Bash<pre><code>sudo apt install redis-server\n</code></pre> <p>After installing Redis, we should ensure to change the <code>supervised</code> setting and add a password to our Redis service.</p> <p>Bash<pre><code>sudo nano /etc/redis/redis.conf\n</code></pre> \u00a0 In the <code>redis.conf</code> file, add the following content. Ensure to update the password to a new, secure password.</p> Bash<pre><code>supervised systemd\nrequirepass s!!D%AriPB-MO~5\n</code></pre> <p>After completing our tasks, we ensure that the Redis service is running and is set to start automatically on reboot.</p> Bash<pre><code>sudo systemctl restart redis\nsudo systemctl enable redis\nsudo systemctl restart redis.service\n</code></pre>"},{"location":"installation/manual/#aptrs-django-apis-setup","title":"APTRS Django APIs Setup","text":"<p>Run the below command to install Python and other requirements for the APTRS.</p> Bash<pre><code>sudo apt install python3-venv python3-dev libpq-dev weasyprint\n</code></pre> <p>It's better to separate the API and web service from other users on the machine. It's advisable to create a separate account for it.</p> Bash<pre><code>sudo adduser aptrs\nsudo usermod -aG sudo aptrs\nusermod -a -G www-data aptrs\nsudo su - aptrs\n</code></pre> <p>APTRS uses Python Poetry to manage dependencies, so we ensure its installation.</p> Bash<pre><code>curl -sSL https://install.python-poetry.org | python3 -\n</code></pre> <p>By default, Poetry is not added to the user or system environment. Ensure you add it to the environment.</p> Bash<pre><code>export PATH=\"/home/aptrs/.local/bin:$PATH\"\n</code></pre> <p>Once completed, we can download the APTRS from GitHub, install the dependencies, and copy the example .env file.</p> <p>Bash<pre><code>cd /home/aptrs\ngit clone https://github.com/APTRS/APTRS\ncd APTRS\npoetry install\ncd APTRS\ncp env.example .env \u00a0# The .env file should be located in the same directory as the manage.py file.\n</code></pre> After obtaining the <code>.env</code> file from the demo environment file, ensure that you update it with the following details: the password for Redis, the PostgreSQL hostname or IP address, the Redis hostname or IP address, the secret key, and any other necessary information. It's important to review all the details in the <code>.env</code> file carefully. For more information on configuring the <code>.env</code> file and the various data it contains, please refer to the Environment Variables section.</p> <p>Few Important details for .env file:</p> <ul> <li> <p>WHITELIST_IP: Add the server domain name if you're using one; if using a public IP, include that as well. For local network access, add the server's internal IP to the whitelist. Specify the protocol (HTTP or HTTPS) and use Nginx instead of the Django default port (8000). You don\u2019t need to specify a port if using HTTP on 80 or HTTPS on 443. If using S3 buckets, include the bucket URL.</p> </li> <li> <p>CORS_ORIGIN: Since the frontend and backend will be on the same server, simply allow the server's public or local IP, along with the appropriate protocol and port, if necessary. Both frontend and backend should be accessible via the same domain or IP using Nginx reverse proxy. For more details, check the Frontend documentation.</p> </li> <li> <p>ALLOWED_HOST: Set this only for the server's domain name or public/internal IP, based on how APTRS will be accessed.</p> </li> <li> <p>SECRET_KEY: Make sure to update it with a secure key; the same key will be used to generate a JWT token.</p> </li> </ul> <p>From the directory where manage.py is located, run the command below.</p> Bash<pre><code>poetry shell\npython3 manage.py makemigrations accounts\npython3 manage.py makemigrations configapi\npython3 manage.py makemigrations customers\npython3 manage.py makemigrations project\npython3 manage.py makemigrations vulnerability\npython3 manage.py makemigrations\npython3 manage.py migrate\npython3 manage.py first_setup\nexit\n</code></pre> <p>Once we have completed the required setup, we need to start the server. APTRS uses Gunicorn for this purpose, which should already be installed through the steps we have completed so far.</p>"},{"location":"installation/manual/#setting-up-gunicorn-service","title":"Setting up Gunicorn Service","text":"<p>First, we need to locate the full path of Gunicorn in our Poetry virtual environment:</p> Bash<pre><code>$&gt; cd /home/aptrs/APTRS\n$&gt; poetry run which gunicorn\n\n## Example output (your path will likely be different):\n/home/aptrs/.cache/pypoetry/virtualenvs/aptrs-h1P6HTQN-py3.12/bin/gunicorn\n</code></pre> <p>Important</p> <p>Make note of this path as you'll need it in the next step when configuring the Gunicorn service.</p> <p>Once we have the full path for Gunicorn, we can set up the <code>gunicorn.service</code> file:</p> Bash<pre><code>sudo nano /etc/systemd/system/gunicorn.service\n</code></pre> <p>In the nano file editor, paste the following configuration. Remember to replace the <code>ExecStart</code> path with the full Gunicorn path you found in the previous step:</p> Bash<pre><code>[Unit]\nDescription=gunicorn daemon to serve APTRS\nRequires=gunicorn.socket\nAfter=network.target\n\n[Service]\nUser=aptrs\nGroup=www-data\nWorkingDirectory=/home/aptrs/APTRS/APTRS\n# Replace this path with your actual Gunicorn path from the previous step\nExecStart=/home/aptrs/.cache/pypoetry/virtualenvs/aptrs-h1P6HTQN-py3.12/bin/gunicorn --workers 3 --access-logfile - --bind unix:/run/gunicorn.sock APTRS.wsgi:application\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>Next, we need to set up the Gunicorn socket file:</p> Bash<pre><code>sudo nano /etc/systemd/system/gunicorn.socket\n</code></pre> <p>Add the following configuration to the socket file:</p> Bash<pre><code>[Unit]\nDescription=gunicorn socket\n\n[Socket]\nListenStream=/run/gunicorn.sock\n\n[Install]\nWantedBy=sockets.target\n</code></pre>"},{"location":"installation/manual/#starting-and-enabling-gunicorn-services","title":"Starting and Enabling Gunicorn Services","text":"<p>Now that everything is configured, we can start and enable the Gunicorn services:</p> Bash<pre><code>sudo systemctl start gunicorn.socket\nsudo systemctl enable gunicorn.socket\nsudo systemctl enable gunicorn\nsudo systemctl daemon-reload\nsudo systemctl restart gunicorn\n</code></pre>"},{"location":"installation/manual/#verifying-the-api-service","title":"Verifying the API Service","text":"<p>To verify that the APTRS APIs are operational, run this command:</p> Bash<pre><code>curl --unix-socket /run/gunicorn.sock localhost/api/config/ping/\n</code></pre> <p>You should receive a success response like this: JSON<pre><code>{\"status\":\"ok\",\"message\":\"Server is up and running!\"}\n</code></pre></p> <p>Troubleshooting</p> <p>If you encounter any issues, check the status of the Gunicorn socket and service: Bash<pre><code>sudo systemctl status gunicorn.socket\nsudo systemctl status gunicorn\n</code></pre> Look for any error messages in the output to help diagnose the problem.</p>"},{"location":"installation/manual/#frontend-vitejs-setup","title":"Frontend ViteJs Setup","text":"<p>This section covers the installation and configuration of the APTRS frontend built with Vite.js.</p>"},{"location":"installation/manual/#installing-nodejs-and-npm","title":"Installing Node.js and NPM","text":"<p>First, install Node.js and NPM:</p> Bash<pre><code>sudo apt install nodejs\nsudo apt install npm\n</code></pre>"},{"location":"installation/manual/#configuring-the-frontend-environment","title":"Configuring the Frontend Environment","text":"<p>After installing NPM and Node.js, we need to create a <code>.env</code> file for the frontend that points to our backend API:</p> Bash<pre><code>cd /home/aptrs/APTRS/frontend\ncp env.example .env\nnano .env\n</code></pre> <p>In the Nano editor, modify the content to the following:</p> Bash<pre><code>VITE_APP_API_URL = /api/\nVITE_APP_ENV = production\n</code></pre> <p>API URL Configuration</p> <p>We're using <code>/api/</code> as the backend URL since both the frontend and backend will be served from the same domain through Nginx's reverse proxy. For more details on frontend configuration, see the Frontend documentation.</p> <p>Now that we have configured the env file, we can install the required packages for the frontend with the command below:</p> Bash<pre><code>npm install\n</code></pre> <p>Once we have all the packages installed, we can build the frontend using the command below.</p> Bash<pre><code>npm run build\n</code></pre> <p>Once the build is completed, we can see all the front-end build at the directory below:</p> Bash<pre><code>cd /home/aptrs/APTRS/frontend/dist\nls\n\nandroid-chrome-192x192.png \u00a0assets \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 favicon.ico \u00a0 \u00a0 \u00a0 logo.svg \u00a0 \u00a0 \u00a0 stats.html\nandroid-chrome-512x512.png \u00a0favicon-16x16.png \u00a0hero-desktop.png \u00a0manifest.json\napple-touch-icon.png \u00a0 \u00a0 \u00a0 \u00a0favicon-32x32.png \u00a0index.html \u00a0 \u00a0 \u00a0 \u00a0robots.txt\n</code></pre>"},{"location":"installation/manual/#nginx-setup","title":"Nginx Setup","text":"<p>We have everything set up, and our APIs are running with Gunicorn. Now, we need to configure the frontend to serve static files with Nginx and connect Gunicorn to Nginx. To get started, we first need to install Nginx using the command below:</p> Bash<pre><code>sudo apt install nginx\n</code></pre> <p>Since our frontend and backend are in the user directory, we will encounter a permission error from Nginx. To resolve this, we will grant access to the www-data user group with the command below:</p> Bash<pre><code>sudo chown -R aptrs:www-data /home/aptrs\n</code></pre> <p>To complete the setup, we can assume the domain name for our web server is <code>demo.aptrs.com</code>. The configuration below will have the nginx configuration files or folder names based on the domain, which users should replace with their actual domain.</p> <p>Next, we will create a new server block in the Nginx sites-available directory using the following command:</p> Bash<pre><code>sudo nano /etc/nginx/sites-available/demo.aptrs.com\n</code></pre> <p>Paste the Below nginx configuration,</p> Bash<pre><code># HTTP server configuration\nserver {\n\u00a0 \u00a0 listen 80;\n\u00a0 \u00a0 server_name demo.aptrs.com; \u00a0# Replace with your domain\n\n\u00a0 \u00a0 server_tokens off;\n\u00a0 \u00a0 client_max_body_size 100M;\n\n\n\n\u00a0 \u00a0 ### Host Validation - &gt; Update according to your need\n\u00a0 \u00a0 if ( $host !~* ^(demo.aptrs.com)$ ) {\n\u00a0 \u00a0 \u00a0 \u00a0 return 444;\n }\n\n\u00a0 \u00a0 # Pass all /api/* to the Django backend\n\u00a0 \u00a0 location /api/ {\n\u00a0 \u00a0 \u00a0 \u00a0 proxy_pass http://unix:/run/gunicorn.sock;\n\u00a0 \u00a0 \u00a0 \u00a0 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\u00a0 \u00a0 \u00a0 \u00a0 proxy_set_header X-Forwarded-Proto $scheme;\n\u00a0 \u00a0 \u00a0 \u00a0 proxy_set_header Host $host;\n\u00a0 \u00a0 \u00a0 \u00a0 proxy_redirect off;\n }\n\n\u00a0 \u00a0 # Home page for frontend\n\u00a0 \u00a0 location / {\n\u00a0 \u00a0 root /home/aptrs/APTRS/frontend/dist;\n\u00a0 \u00a0 index index.html index.htm;\n\u00a0 \u00a0 try_files $uri $uri/ /index.html =404;\n }\n\u00a0 \u00a0 ## Server Static from Django over nginx\n\u00a0 \u00a0 location /static/ {\n\u00a0 \u00a0 \u00a0 \u00a0 alias /home/aptrs/APTRS/APTRS/static/;\n }\n\n\u00a0 \u00a0 # Blocked, accessing the whole media folder may lead to access to sensitive images like POC images,\n\u00a0 \u00a0 #location /media/ {\n\u00a0 \u00a0 # \u00a0 \u00a0alias /home/aptrs/APTRS/APTRS/media/; \u00a0# Path to your media files\n\u00a0 \u00a0 #}\n\n\u00a0 \u00a0 location = /favicon.ico {\n\u00a0 \u00a0 alias /home/aptrs/APTRS/frontend/dist/favicon.ico;\n\u00a0 \u00a0 access_log off;\n\u00a0 \u00a0 log_not_found off;\n\u00a0 \u00a0\n }\n\n\u00a0 \u00a0 ## Server user profile photo\n\u00a0 \u00a0 location /media/profile/ {\n\u00a0 \u00a0 \u00a0 \u00a0 alias /home/aptrs/APTRS/APTRS/media/profile/; \u00a0# Path to your media files\n }\n\n\u00a0 \u00a0 ## Server Company Logo Images\n\u00a0 \u00a0 location /media/company/ {\n\u00a0 \u00a0 \u00a0 \u00a0 alias /home/aptrs/APTRS/APTRS/media/company/; \u00a0# Path to your media files\n }\n\n\u00a0 \u00a0 ## HTML Report design Images like background images\n\u00a0 \u00a0 location /media/report/ {\n\u00a0 \u00a0 \u00a0 \u00a0 alias /home/aptrs/APTRS/APTRS/media/report/; \u00a0# Path to your media files\n }\n\n\u00a0 \u00a0 access_log /var/log/nginx/APTRS_access.log; \u00a0# Path to access log file\n\u00a0 \u00a0 error_log /var/log/nginx/APTRS_error.log; \u00a0 # Path to the error log file\n}\n</code></pre> <p>Let\u2019s enable the file by creating a link from it to the\u00a0sites-enabled\u00a0directory, which Nginx reads from during startup:</p> Bash<pre><code>sudo ln -s /etc/nginx/sites-available/demo.aptrs.com /etc/nginx/sites-enabled/\n</code></pre> <p>Let's verify if any error from the nginx with</p> <p>Bash<pre><code>sudo nginx -t\n</code></pre> If there are no errors we can start the nginx</p> Bash<pre><code>sudo systemctl restart nginx\n</code></pre> <p>Installation Complete</p> <p>At this point, your APTRS installation should be complete and accessible via your domain or IP address. You can navigate to http://your-domain.com (or https:// if you've set up SSL) in your browser to access the APTRS interface.</p>"},{"location":"installation/manual/#https-certificate","title":"HTTPS Certificate","text":"<p>For production environments, it's highly recommended to secure your site with HTTPS. We can use Let's Encrypt and Certbot to obtain a free SSL certificate:</p> Bash<pre><code>sudo apt install certbot python3-certbot-nginx\nsudo certbot --nginx -d demo.aptrs.com\nsudo systemctl status certbot.timer\nsudo certbot renew --dry-run\n</code></pre> <p>The certbot utility will guide you through the process of obtaining and installing the certificate. It will also modify your Nginx configuration to use HTTPS and redirect HTTP traffic to HTTPS.</p> <p>Auto-renewal</p> <p>Certbot automatically adds a timer to renew certificates before they expire. You can verify this is working with the <code>sudo systemctl status certbot.timer</code> command.</p>"},{"location":"installation/post-deploy/","title":"Post-Deployment Setup","text":"<p>After successfully deploying APTRS through either the manual method or Docker, follow this checklist to ensure your system is properly configured and ready for use.</p>"},{"location":"installation/post-deploy/#first-time-deployment-checklist","title":"First-Time Deployment Checklist","text":"<p>Before You Begin</p> <p>Keep this checklist handy to verify that all critical components are properly set up in your new APTRS installation.</p>"},{"location":"installation/post-deploy/#1-company-setup","title":"1. Company Setup","text":"<p>Upon first deployment, APTRS automatically creates a default company named APTRS PVT. This serves as your internal company, representing the organization using APTRS to generate reports for clients.</p> <p>Internal Company Management</p> <ul> <li>The internal company cannot be deleted or added via the frontend or API</li> <li>You should edit its name, address, and logo to match your organization's details</li> <li>Any additional companies you create will be treated as client companies</li> </ul>"},{"location":"installation/post-deploy/#2-user-groups","title":"2. User Groups","text":"<p>APTRS includes predefined user groups that are essential for proper report generation and role management.</p> <p>Default Groups</p> <ul> <li>Manager and Project Manager groups are used to include manager details in the reports</li> <li>Do not rename or delete these groups, as doing so may cause errors during report generation</li> </ul>"},{"location":"installation/post-deploy/#3-admin-user","title":"3. Admin User","text":"<p>During first deployment, APTRS creates a default admin user associated with your internal company.</p> <p>Admin Account Security</p> <ul> <li>Do not delete this user, as it is essential for system functionality</li> <li>For security, immediately update the admin user's profile details:<ul> <li>Email address (use a secure company email)</li> <li>Password (use a strong, unique password)</li> <li>Name (real name or designated admin title)</li> <li>Photo (optional: company logo or admin photo)</li> </ul> </li> </ul>"},{"location":"installation/post-deploy/#next-steps","title":"Next Steps","text":"<p>After completing the initial setup, you may want to:</p> <ol> <li>Create additional user accounts for your team members</li> <li>Add client companies to your system</li> <li>Configure vulnerability templates</li> <li>Customize report templates to match your brand</li> <li>Review system settings for optimal performance</li> </ol> <p>Refer to the Features documentation for detailed information on using these capabilities.</p>"}]}